RCAN(
  (sub_mean): MeanShift(3, 3, kernel_size=(1, 1), stride=(1, 1))
  (add_mean): MeanShift(3, 3, kernel_size=(1, 1), stride=(1, 1))
  (head): Sequential(
    (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (body): Sequential(
    (0): ResidualGroup(
      (body): Sequential(
        (0): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (1): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (2): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (3): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (1): ResidualGroup(
      (body): Sequential(
        (0): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (1): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (2): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (3): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (2): ResidualGroup(
      (body): Sequential(
        (0): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (1): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (2): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (3): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (3): ResidualGroup(
      (body): Sequential(
        (0): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (1): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (2): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (3): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (4): ResidualGroup(
      (body): Sequential(
        (0): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (1): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (2): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (3): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (5): ResidualGroup(
      (body): Sequential(
        (0): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (1): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (2): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (3): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (6): ResidualGroup(
      (body): Sequential(
        (0): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (1): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (2): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (3): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (7): ResidualGroup(
      (body): Sequential(
        (0): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (1): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (2): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (3): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (8): ResidualGroup(
      (body): Sequential(
        (0): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (1): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (2): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (3): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (9): ResidualGroup(
      (body): Sequential(
        (0): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (1): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (2): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (3): RCAB(
          (body): Sequential(
            (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (1): ReLU(inplace=True)
            (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (3): CALayer(
              (avg_pool): AdaptiveAvgPool2d(output_size=1)
              (conv_du): Sequential(
                (0): Conv2d(64, 4, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(4, 64, kernel_size=(1, 1), stride=(1, 1))
                (3): Sigmoid()
              )
            )
          )
        )
        (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (tail): Sequential(
    (0): Upsampler(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): PixelShuffle(upscale_factor=2)
    )
    (1): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
)
[Epoch 1]	Learning rate: 1.00e-4
[1600/32208]	[L1: 12.6535]	52.6+0.7s
[3200/32208]	[L1: 9.8898]	52.7+0.1s
[4800/32208]	[L1: 8.6483]	53.5+0.1s
[6400/32208]	[L1: 7.8209]	53.5+0.1s
[8000/32208]	[L1: 7.2903]	53.4+0.1s
[9600/32208]	[L1: 6.9261]	53.5+0.1s
[11200/32208]	[L1: 6.6496]	53.2+0.1s
[12800/32208]	[L1: 6.4153]	53.5+0.1s
[14400/32208]	[L1: 6.2319]	53.6+0.1s
[16000/32208]	[L1: 6.0858]	52.8+0.1s
[17600/32208]	[L1: 5.9762]	52.8+0.1s
[19200/32208]	[L1: 5.8568]	53.0+0.1s
[20800/32208]	[L1: 5.7642]	53.1+0.1s
[22400/32208]	[L1: 5.6774]	52.8+0.1s
[24000/32208]	[L1: 5.6108]	52.7+0.1s
[25600/32208]	[L1: 5.5413]	52.7+0.1s
[27200/32208]	[L1: 5.4803]	52.7+0.1s
[28800/32208]	[L1: 5.4382]	53.0+0.1s
[30400/32208]	[L1: 5.3854]	53.1+0.1s
[32000/32208]	[L1: 5.3422]	53.3+0.1s

Evaluation:
[ x2]	PSNR: 30.748 (Best: 30.748 @epoch 1)
Forward: 11.14s

Saving...
Total: 12.85s

[Epoch 2]	Learning rate: 1.00e-4
[1600/32208]	[L1: 4.5582]	52.7+0.7s
[3200/32208]	[L1: 4.5814]	53.5+0.1s
[4800/32208]	[L1: 4.5558]	53.4+0.1s
[6400/32208]	[L1: 4.5492]	52.8+0.1s
[8000/32208]	[L1: 4.5259]	53.1+0.1s
[9600/32208]	[L1: 4.4782]	53.0+0.1s
[11200/32208]	[L1: 4.4619]	52.7+0.1s
[12800/32208]	[L1: 4.4157]	52.9+0.1s
[14400/32208]	[L1: 4.4074]	52.8+0.1s
[16000/32208]	[L1: 4.3985]	52.8+0.1s
[17600/32208]	[L1: 4.3747]	53.1+0.1s
[19200/32208]	[L1: 4.3694]	52.8+0.1s
[20800/32208]	[L1: 4.3625]	52.7+0.1s
[22400/32208]	[L1: 4.3476]	52.8+0.1s
[24000/32208]	[L1: 4.3253]	52.7+0.1s
[25600/32208]	[L1: 4.3227]	52.8+0.1s
[27200/32208]	[L1: 4.3176]	52.8+0.1s
[28800/32208]	[L1: 4.3057]	52.7+0.1s
[30400/32208]	[L1: 4.2997]	53.0+0.1s
[32000/32208]	[L1: 4.2893]	53.0+0.1s

Evaluation:
[ x2]	PSNR: 31.254 (Best: 31.254 @epoch 2)
Forward: 12.18s

Saving...
Total: 13.52s

[Epoch 3]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.9895]	52.8+0.6s
[3200/32208]	[L1: 4.0437]	52.9+0.1s
[4800/32208]	[L1: 4.0587]	53.1+0.1s
[6400/32208]	[L1: 4.0917]	53.7+0.1s
[8000/32208]	[L1: 4.1223]	53.7+0.1s
[9600/32208]	[L1: 4.1111]	53.8+0.1s
[11200/32208]	[L1: 4.1328]	53.5+0.1s
[12800/32208]	[L1: 4.1150]	53.3+0.1s
[14400/32208]	[L1: 4.0914]	53.3+0.1s
[16000/32208]	[L1: 4.0752]	53.7+0.1s
[17600/32208]	[L1: 4.0815]	54.2+0.1s
[19200/32208]	[L1: 4.0768]	54.3+0.1s
[20800/32208]	[L1: 4.0726]	54.3+0.1s
[22400/32208]	[L1: 4.0653]	53.9+0.1s
[24000/32208]	[L1: 4.0468]	53.7+0.1s
[25600/32208]	[L1: 4.0443]	53.0+0.1s
[27200/32208]	[L1: 4.0480]	53.7+0.1s
[28800/32208]	[L1: 4.0462]	53.6+0.1s
[30400/32208]	[L1: 4.0447]	53.2+0.1s
[32000/32208]	[L1: 4.0446]	53.5+0.1s

Evaluation:
[ x2]	PSNR: 31.447 (Best: 31.447 @epoch 3)
Forward: 11.59s

Saving...
Total: 13.16s

[Epoch 4]	Learning rate: 1.00e-4
[1600/32208]	[L1: 4.0194]	52.8+0.7s
[3200/32208]	[L1: 4.0209]	53.2+0.1s
[4800/32208]	[L1: 4.0379]	53.7+0.1s
[6400/32208]	[L1: 4.0162]	53.4+0.1s
[8000/32208]	[L1: 4.0043]	53.5+0.1s
[9600/32208]	[L1: 3.9862]	53.4+0.1s
[11200/32208]	[L1: 3.9690]	53.3+0.1s
[12800/32208]	[L1: 3.9605]	53.7+0.1s
[14400/32208]	[L1: 3.9709]	53.7+0.1s
[16000/32208]	[L1: 3.9535]	53.8+0.1s
[17600/32208]	[L1: 3.9701]	54.0+0.1s
[19200/32208]	[L1: 3.9714]	54.0+0.1s
[20800/32208]	[L1: 3.9702]	53.6+0.1s
[22400/32208]	[L1: 3.9759]	54.1+0.1s
[24000/32208]	[L1: 3.9738]	54.0+0.1s
[25600/32208]	[L1: 3.9789]	54.0+0.1s
[27200/32208]	[L1: 3.9697]	53.9+0.1s
[28800/32208]	[L1: 3.9631]	53.9+0.1s
[30400/32208]	[L1: 3.9586]	53.5+0.1s
[32000/32208]	[L1: 3.9557]	53.9+0.1s

Evaluation:
[ x2]	PSNR: 31.549 (Best: 31.549 @epoch 4)
Forward: 12.27s

Saving...
Total: 13.82s

[Epoch 5]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.9233]	53.6+1.7s
[3200/32208]	[L1: 3.8632]	53.0+0.1s
[4800/32208]	[L1: 3.8963]	52.8+0.1s
[6400/32208]	[L1: 3.8451]	52.7+0.1s
[8000/32208]	[L1: 3.8361]	53.0+0.1s
[9600/32208]	[L1: 3.8620]	53.6+0.1s
[11200/32208]	[L1: 3.8812]	53.5+0.1s
[12800/32208]	[L1: 3.8740]	53.5+0.1s
[14400/32208]	[L1: 3.8864]	53.8+0.1s
[16000/32208]	[L1: 3.8852]	53.3+0.1s
[17600/32208]	[L1: 3.8675]	53.9+0.1s
[19200/32208]	[L1: 3.8764]	53.4+0.1s
[20800/32208]	[L1: 3.8752]	53.4+0.1s
[22400/32208]	[L1: 3.8703]	53.2+0.1s
[24000/32208]	[L1: 3.8758]	54.1+0.1s
[25600/32208]	[L1: 3.8845]	53.4+0.1s
[27200/32208]	[L1: 3.8903]	54.1+0.1s
[28800/32208]	[L1: 3.8971]	54.4+0.1s
[30400/32208]	[L1: 3.8901]	53.9+0.1s
[32000/32208]	[L1: 3.8837]	53.7+0.1s

Evaluation:
[ x2]	PSNR: 31.665 (Best: 31.665 @epoch 5)
Forward: 12.03s

Saving...
Total: 13.49s

[Epoch 6]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.9643]	53.2+0.7s
[3200/32208]	[L1: 3.8801]	53.4+0.1s
[4800/32208]	[L1: 3.8675]	53.6+0.1s
[6400/32208]	[L1: 3.8224]	53.4+0.1s
[8000/32208]	[L1: 3.8194]	54.3+0.1s
[9600/32208]	[L1: 3.8214]	53.8+0.1s
[11200/32208]	[L1: 3.8209]	53.8+0.1s
[12800/32208]	[L1: 3.8094]	54.4+0.1s
[14400/32208]	[L1: 3.8075]	53.6+0.1s
[16000/32208]	[L1: 3.8108]	53.7+0.1s
[17600/32208]	[L1: 3.7986]	53.6+0.1s
[19200/32208]	[L1: 3.8001]	54.3+0.1s
[20800/32208]	[L1: 3.7922]	54.2+0.1s
[22400/32208]	[L1: 3.7948]	53.3+0.1s
[24000/32208]	[L1: 3.7970]	53.6+0.1s
[25600/32208]	[L1: 3.8057]	54.0+0.1s
[27200/32208]	[L1: 3.8057]	53.9+0.1s
[28800/32208]	[L1: 3.8022]	53.9+0.1s
[30400/32208]	[L1: 3.8079]	53.7+0.1s
[32000/32208]	[L1: 3.8070]	53.4+0.1s

Evaluation:
[ x2]	PSNR: 31.734 (Best: 31.734 @epoch 6)
Forward: 11.94s

Saving...
Total: 13.60s

[Epoch 7]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.8563]	53.8+0.6s
[3200/32208]	[L1: 3.8252]	53.5+0.1s
[4800/32208]	[L1: 3.8191]	53.2+0.1s
[6400/32208]	[L1: 3.8202]	53.2+0.1s
[8000/32208]	[L1: 3.8180]	53.5+0.1s
[9600/32208]	[L1: 3.8146]	53.3+0.1s
[11200/32208]	[L1: 3.8097]	53.2+0.1s
[12800/32208]	[L1: 3.7867]	53.2+0.1s
[14400/32208]	[L1: 3.7748]	53.3+0.1s
[16000/32208]	[L1: 3.7873]	53.3+0.1s
[17600/32208]	[L1: 3.7884]	53.3+0.1s
[19200/32208]	[L1: 3.7870]	53.7+0.1s
[20800/32208]	[L1: 3.7861]	52.9+0.1s
[22400/32208]	[L1: 3.7869]	53.4+0.1s
[24000/32208]	[L1: 3.7794]	53.3+0.1s
[25600/32208]	[L1: 3.7698]	53.3+0.1s
[27200/32208]	[L1: 3.7782]	53.4+0.1s
[28800/32208]	[L1: 3.7772]	53.0+0.1s
[30400/32208]	[L1: 3.7763]	53.5+0.1s
[32000/32208]	[L1: 3.7730]	53.3+0.1s

Evaluation:
[ x2]	PSNR: 31.804 (Best: 31.804 @epoch 7)
Forward: 11.74s

Saving...
Total: 13.29s

[Epoch 8]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.8141]	53.2+0.7s
[3200/32208]	[L1: 3.7899]	53.3+0.1s
[4800/32208]	[L1: 3.7691]	53.3+0.1s
[6400/32208]	[L1: 3.7759]	53.2+0.1s
[8000/32208]	[L1: 3.7537]	52.8+0.1s
[9600/32208]	[L1: 3.7590]	52.8+0.1s
[11200/32208]	[L1: 3.7455]	52.9+0.1s
[12800/32208]	[L1: 3.7464]	52.9+0.1s
[14400/32208]	[L1: 3.7388]	53.0+0.1s
[16000/32208]	[L1: 3.7445]	53.0+0.1s
[17600/32208]	[L1: 3.7469]	53.0+0.1s
[19200/32208]	[L1: 3.7426]	53.6+0.1s
[20800/32208]	[L1: 3.7412]	52.9+0.1s
[22400/32208]	[L1: 3.7440]	53.2+0.1s
[24000/32208]	[L1: 3.7479]	53.5+0.1s
[25600/32208]	[L1: 3.7429]	53.7+0.1s
[27200/32208]	[L1: 3.7314]	53.3+0.1s
[28800/32208]	[L1: 3.7335]	53.1+0.1s
[30400/32208]	[L1: 3.7315]	53.4+0.1s
[32000/32208]	[L1: 3.7295]	53.5+0.1s

Evaluation:
[ x2]	PSNR: 31.834 (Best: 31.834 @epoch 8)
Forward: 12.24s

Saving...
Total: 13.65s

[Epoch 9]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.5929]	52.9+0.7s
[3200/32208]	[L1: 3.7192]	52.9+0.1s
[4800/32208]	[L1: 3.7359]	53.4+0.1s
[6400/32208]	[L1: 3.6686]	52.9+0.1s
[8000/32208]	[L1: 3.6898]	53.5+0.1s
[9600/32208]	[L1: 3.6868]	52.8+0.1s
[11200/32208]	[L1: 3.6985]	52.9+0.1s
[12800/32208]	[L1: 3.7097]	53.0+0.1s
[14400/32208]	[L1: 3.7148]	52.7+0.1s
[16000/32208]	[L1: 3.7160]	52.9+0.1s
[17600/32208]	[L1: 3.7215]	52.8+0.1s
[19200/32208]	[L1: 3.7185]	52.9+0.1s
[20800/32208]	[L1: 3.7182]	53.1+0.1s
[22400/32208]	[L1: 3.7096]	53.4+0.1s
[24000/32208]	[L1: 3.7085]	52.8+0.1s
[25600/32208]	[L1: 3.7136]	53.4+0.1s
[27200/32208]	[L1: 3.7150]	53.4+0.1s
[28800/32208]	[L1: 3.7203]	53.1+0.1s
[30400/32208]	[L1: 3.7234]	53.6+0.1s
[32000/32208]	[L1: 3.7182]	53.1+0.1s

Evaluation:
[ x2]	PSNR: 31.891 (Best: 31.891 @epoch 9)
Forward: 11.92s

Saving...
Total: 13.35s

[Epoch 10]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.6317]	52.8+0.6s
[3200/32208]	[L1: 3.6664]	53.5+0.1s
[4800/32208]	[L1: 3.6745]	52.7+0.1s
[6400/32208]	[L1: 3.6639]	53.3+0.1s
[8000/32208]	[L1: 3.6653]	53.0+0.1s
[9600/32208]	[L1: 3.6812]	53.2+0.1s
[11200/32208]	[L1: 3.6708]	53.2+0.1s
[12800/32208]	[L1: 3.6861]	52.9+0.1s
[14400/32208]	[L1: 3.6832]	53.2+0.1s
[16000/32208]	[L1: 3.6941]	53.7+0.1s
[17600/32208]	[L1: 3.6849]	53.5+0.1s
[19200/32208]	[L1: 3.6915]	53.8+0.1s
[20800/32208]	[L1: 3.6918]	53.9+0.1s
[22400/32208]	[L1: 3.6852]	53.5+0.1s
[24000/32208]	[L1: 3.6847]	53.1+0.1s
[25600/32208]	[L1: 3.6777]	53.7+0.1s
[27200/32208]	[L1: 3.6719]	53.8+0.1s
[28800/32208]	[L1: 3.6741]	53.5+0.1s
[30400/32208]	[L1: 3.6706]	53.7+0.1s
[32000/32208]	[L1: 3.6769]	53.9+0.1s

Evaluation:
[ x2]	PSNR: 31.918 (Best: 31.918 @epoch 10)
Forward: 12.13s

Saving...
Total: 13.50s

[Epoch 11]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.5760]	53.4+1.9s
[3200/32208]	[L1: 3.5991]	53.1+0.1s
[4800/32208]	[L1: 3.6374]	53.4+0.1s
[6400/32208]	[L1: 3.6373]	53.0+0.1s
[8000/32208]	[L1: 3.6339]	53.4+0.1s
[9600/32208]	[L1: 3.6276]	52.8+0.1s
[11200/32208]	[L1: 3.6545]	52.9+0.1s
[12800/32208]	[L1: 3.6792]	52.7+0.1s
[14400/32208]	[L1: 3.6787]	53.2+0.1s
[16000/32208]	[L1: 3.6730]	52.6+0.1s
[17600/32208]	[L1: 3.6747]	52.6+0.1s
[19200/32208]	[L1: 3.6770]	52.6+0.1s
[20800/32208]	[L1: 3.6643]	52.6+0.1s
[22400/32208]	[L1: 3.6788]	52.6+0.1s
[24000/32208]	[L1: 3.6739]	52.6+0.1s
[25600/32208]	[L1: 3.6756]	52.8+0.1s
[27200/32208]	[L1: 3.6643]	53.1+0.1s
[28800/32208]	[L1: 3.6568]	53.3+0.1s
[30400/32208]	[L1: 3.6542]	52.6+0.1s
[32000/32208]	[L1: 3.6552]	52.7+0.1s

Evaluation:
[ x2]	PSNR: 31.866 (Best: 31.918 @epoch 10)
Forward: 11.80s

Saving...
Total: 12.99s

[Epoch 12]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.6616]	53.1+0.5s
[3200/32208]	[L1: 3.6283]	53.4+0.1s
[4800/32208]	[L1: 3.6701]	52.9+0.1s
[6400/32208]	[L1: 3.6582]	53.3+0.1s
[8000/32208]	[L1: 3.6500]	53.4+0.1s
[9600/32208]	[L1: 3.6401]	53.5+0.1s
[11200/32208]	[L1: 3.6423]	53.8+0.1s
[12800/32208]	[L1: 3.6534]	53.1+0.1s
[14400/32208]	[L1: 3.6513]	53.4+0.1s
[16000/32208]	[L1: 3.6443]	53.0+0.1s
[17600/32208]	[L1: 3.6499]	53.3+0.1s
[19200/32208]	[L1: 3.6452]	53.2+0.1s
[20800/32208]	[L1: 3.6385]	53.0+0.1s
[22400/32208]	[L1: 3.6323]	53.6+0.1s
[24000/32208]	[L1: 3.6398]	53.4+0.1s
[25600/32208]	[L1: 3.6422]	52.9+0.1s
[27200/32208]	[L1: 3.6387]	52.9+0.1s
[28800/32208]	[L1: 3.6419]	53.2+0.1s
[30400/32208]	[L1: 3.6394]	52.9+0.1s
[32000/32208]	[L1: 3.6373]	52.9+0.1s

Evaluation:
[ x2]	PSNR: 31.950 (Best: 31.950 @epoch 12)
Forward: 11.15s

Saving...
Total: 12.70s

[Epoch 13]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.6919]	53.5+0.8s
[3200/32208]	[L1: 3.6598]	53.1+0.1s
[4800/32208]	[L1: 3.6521]	53.5+0.1s
[6400/32208]	[L1: 3.6328]	53.2+0.1s
[8000/32208]	[L1: 3.6195]	53.5+0.1s
[9600/32208]	[L1: 3.6162]	53.8+0.1s
[11200/32208]	[L1: 3.6300]	53.8+0.1s
[12800/32208]	[L1: 3.6302]	53.6+0.1s
[14400/32208]	[L1: 3.6154]	53.5+0.1s
[16000/32208]	[L1: 3.6223]	53.4+0.1s
[17600/32208]	[L1: 3.6189]	53.4+0.1s
[19200/32208]	[L1: 3.6150]	53.6+0.1s
[20800/32208]	[L1: 3.6034]	53.9+0.1s
[22400/32208]	[L1: 3.6061]	53.1+0.1s
[24000/32208]	[L1: 3.6034]	53.1+0.1s
[25600/32208]	[L1: 3.6000]	52.9+0.1s
[27200/32208]	[L1: 3.6006]	53.2+0.1s
[28800/32208]	[L1: 3.5981]	52.9+0.1s
[30400/32208]	[L1: 3.6088]	52.8+0.1s
[32000/32208]	[L1: 3.6107]	52.6+0.1s

Evaluation:
[ x2]	PSNR: 31.979 (Best: 31.979 @epoch 13)
Forward: 12.15s

Saving...
Total: 13.67s

[Epoch 14]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.5090]	52.9+0.8s
[3200/32208]	[L1: 3.4694]	52.9+0.1s
[4800/32208]	[L1: 3.5582]	53.0+0.1s
[6400/32208]	[L1: 3.5705]	53.1+0.1s
[8000/32208]	[L1: 3.5934]	53.7+0.1s
[9600/32208]	[L1: 3.5862]	53.0+0.1s
[11200/32208]	[L1: 3.5871]	53.2+0.1s
[12800/32208]	[L1: 3.5994]	53.2+0.1s
[14400/32208]	[L1: 3.5930]	53.0+0.1s
[16000/32208]	[L1: 3.5960]	53.7+0.1s
[17600/32208]	[L1: 3.6079]	53.9+0.1s
[19200/32208]	[L1: 3.6183]	53.7+0.1s
[20800/32208]	[L1: 3.6159]	53.5+0.1s
[22400/32208]	[L1: 3.6033]	53.5+0.1s
[24000/32208]	[L1: 3.6039]	53.8+0.1s
[25600/32208]	[L1: 3.6039]	52.8+0.1s
[27200/32208]	[L1: 3.6065]	53.1+0.1s
[28800/32208]	[L1: 3.6050]	52.8+0.1s
[30400/32208]	[L1: 3.6071]	52.7+0.1s
[32000/32208]	[L1: 3.6060]	52.8+0.1s

Evaluation:
[ x2]	PSNR: 31.961 (Best: 31.979 @epoch 13)
Forward: 11.11s

Saving...
Total: 12.38s

[Epoch 15]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.6984]	52.7+0.7s
[3200/32208]	[L1: 3.6321]	53.1+0.1s
[4800/32208]	[L1: 3.5942]	53.0+0.1s
[6400/32208]	[L1: 3.5540]	53.7+0.1s
[8000/32208]	[L1: 3.5391]	54.1+0.1s
[9600/32208]	[L1: 3.5425]	53.9+0.1s
[11200/32208]	[L1: 3.5646]	53.6+0.1s
[12800/32208]	[L1: 3.5735]	53.3+0.1s
[14400/32208]	[L1: 3.5711]	53.1+0.1s
[16000/32208]	[L1: 3.5745]	53.1+0.1s
[17600/32208]	[L1: 3.5736]	53.0+0.1s
[19200/32208]	[L1: 3.5667]	52.9+0.1s
[20800/32208]	[L1: 3.5690]	53.6+0.1s
[22400/32208]	[L1: 3.5787]	53.6+0.1s
[24000/32208]	[L1: 3.5721]	53.3+0.1s
[25600/32208]	[L1: 3.5715]	53.8+0.1s
[27200/32208]	[L1: 3.5798]	53.4+0.1s
[28800/32208]	[L1: 3.5843]	53.0+0.1s
[30400/32208]	[L1: 3.5860]	53.9+0.1s
[32000/32208]	[L1: 3.5856]	53.6+0.1s

Evaluation:
[ x2]	PSNR: 31.988 (Best: 31.988 @epoch 15)
Forward: 11.11s

Saving...
Total: 14.55s

[Epoch 16]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.4497]	52.8+0.8s
[3200/32208]	[L1: 3.4911]	53.5+0.1s
[4800/32208]	[L1: 3.5263]	53.4+0.1s
[6400/32208]	[L1: 3.5725]	53.3+0.1s
[8000/32208]	[L1: 3.6018]	53.5+0.1s
[9600/32208]	[L1: 3.5567]	53.1+0.1s
[11200/32208]	[L1: 3.5545]	53.3+0.1s
[12800/32208]	[L1: 3.5487]	54.0+0.1s
[14400/32208]	[L1: 3.5561]	53.2+0.1s
[16000/32208]	[L1: 3.5625]	53.3+0.1s
[17600/32208]	[L1: 3.5710]	53.8+0.1s
[19200/32208]	[L1: 3.5767]	53.2+0.1s
[20800/32208]	[L1: 3.5716]	53.0+0.1s
[22400/32208]	[L1: 3.5721]	53.2+0.1s
[24000/32208]	[L1: 3.5765]	53.2+0.1s
[25600/32208]	[L1: 3.5757]	53.5+0.1s
[27200/32208]	[L1: 3.5844]	53.7+0.1s
[28800/32208]	[L1: 3.5806]	53.4+0.1s
[30400/32208]	[L1: 3.5773]	53.2+0.1s
[32000/32208]	[L1: 3.5745]	53.2+0.1s

Evaluation:
[ x2]	PSNR: 31.990 (Best: 31.990 @epoch 16)
Forward: 11.35s

Saving...
Total: 12.78s

[Epoch 17]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.4477]	53.0+0.9s
[3200/32208]	[L1: 3.4936]	53.0+0.1s
[4800/32208]	[L1: 3.4886]	53.3+0.1s
[6400/32208]	[L1: 3.5041]	53.1+0.1s
[8000/32208]	[L1: 3.5237]	53.6+0.1s
[9600/32208]	[L1: 3.5276]	53.3+0.1s
[11200/32208]	[L1: 3.5466]	52.7+0.1s
[12800/32208]	[L1: 3.5616]	53.2+0.1s
[14400/32208]	[L1: 3.5668]	53.5+0.1s
[16000/32208]	[L1: 3.5682]	53.1+0.1s
[17600/32208]	[L1: 3.5624]	52.7+0.1s
[19200/32208]	[L1: 3.5602]	53.2+0.1s
[20800/32208]	[L1: 3.5617]	53.2+0.1s
[22400/32208]	[L1: 3.5636]	52.9+0.1s
[24000/32208]	[L1: 3.5714]	52.9+0.1s
[25600/32208]	[L1: 3.5690]	53.3+0.1s
[27200/32208]	[L1: 3.5739]	54.1+0.1s
[28800/32208]	[L1: 3.5721]	53.8+0.1s
[30400/32208]	[L1: 3.5697]	53.5+0.1s
[32000/32208]	[L1: 3.5644]	53.5+0.1s

Evaluation:
[ x2]	PSNR: 32.020 (Best: 32.020 @epoch 17)
Forward: 12.45s

Saving...
Total: 14.30s

[Epoch 18]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.3997]	53.4+0.7s
[3200/32208]	[L1: 3.5101]	53.7+0.1s
[4800/32208]	[L1: 3.5231]	53.6+0.1s
[6400/32208]	[L1: 3.5517]	53.7+0.1s
[8000/32208]	[L1: 3.5309]	53.3+0.1s
[9600/32208]	[L1: 3.5499]	53.5+0.1s
[11200/32208]	[L1: 3.5546]	53.4+0.1s
[12800/32208]	[L1: 3.5575]	53.5+0.1s
[14400/32208]	[L1: 3.5604]	53.1+0.1s
[16000/32208]	[L1: 3.5531]	52.7+0.1s
[17600/32208]	[L1: 3.5534]	52.8+0.1s
[19200/32208]	[L1: 3.5622]	52.9+0.1s
[20800/32208]	[L1: 3.5578]	52.7+0.1s
[22400/32208]	[L1: 3.5579]	52.7+0.1s
[24000/32208]	[L1: 3.5602]	52.6+0.1s
[25600/32208]	[L1: 3.5594]	52.6+0.1s
[27200/32208]	[L1: 3.5572]	53.1+0.1s
[28800/32208]	[L1: 3.5543]	52.9+0.1s
[30400/32208]	[L1: 3.5555]	53.1+0.1s
[32000/32208]	[L1: 3.5494]	52.8+0.1s

Evaluation:
[ x2]	PSNR: 32.031 (Best: 32.031 @epoch 18)
Forward: 12.37s

Saving...
Total: 13.93s

[Epoch 19]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.4279]	52.6+0.8s
[3200/32208]	[L1: 3.5074]	52.6+0.1s
[4800/32208]	[L1: 3.5182]	53.8+0.1s
[6400/32208]	[L1: 3.5387]	52.8+0.1s
[8000/32208]	[L1: 3.5703]	52.7+0.1s
[9600/32208]	[L1: 3.5703]	52.7+0.1s
[11200/32208]	[L1: 3.5639]	52.6+0.1s
[12800/32208]	[L1: 3.5655]	52.7+0.1s
[14400/32208]	[L1: 3.5502]	52.8+0.1s
[16000/32208]	[L1: 3.5548]	52.6+0.1s
[17600/32208]	[L1: 3.5440]	52.6+0.1s
[19200/32208]	[L1: 3.5336]	52.8+0.1s
[20800/32208]	[L1: 3.5304]	52.9+0.1s
[22400/32208]	[L1: 3.5386]	53.5+0.1s
[24000/32208]	[L1: 3.5362]	53.4+0.1s
[25600/32208]	[L1: 3.5465]	52.8+0.1s
[27200/32208]	[L1: 3.5531]	53.2+0.1s
[28800/32208]	[L1: 3.5492]	53.5+0.1s
[30400/32208]	[L1: 3.5422]	52.8+0.1s
[32000/32208]	[L1: 3.5491]	53.0+0.1s

Evaluation:
[ x2]	PSNR: 32.049 (Best: 32.049 @epoch 19)
Forward: 11.46s

Saving...
Total: 12.81s

[Epoch 20]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.4817]	53.2+0.6s
[3200/32208]	[L1: 3.4948]	53.8+0.1s
[4800/32208]	[L1: 3.5665]	53.6+0.1s
[6400/32208]	[L1: 3.5660]	53.4+0.1s
[8000/32208]	[L1: 3.5514]	54.0+0.1s
[9600/32208]	[L1: 3.5366]	53.5+0.1s
[11200/32208]	[L1: 3.5301]	53.7+0.1s
[12800/32208]	[L1: 3.5224]	53.1+0.1s
[14400/32208]	[L1: 3.5351]	53.1+0.1s
[16000/32208]	[L1: 3.5268]	53.0+0.1s
[17600/32208]	[L1: 3.5329]	53.4+0.1s
[19200/32208]	[L1: 3.5275]	53.2+0.1s
[20800/32208]	[L1: 3.5313]	53.5+0.1s
[22400/32208]	[L1: 3.5327]	53.7+0.1s
[24000/32208]	[L1: 3.5439]	53.4+0.1s
[25600/32208]	[L1: 3.5363]	54.0+0.1s
[27200/32208]	[L1: 3.5351]	54.1+0.1s
[28800/32208]	[L1: 3.5343]	53.8+0.1s
[30400/32208]	[L1: 3.5343]	54.2+0.1s
[32000/32208]	[L1: 3.5419]	54.4+0.1s

Evaluation:
[ x2]	PSNR: 32.046 (Best: 32.049 @epoch 19)
Forward: 12.04s

Saving...
Total: 13.25s

[Epoch 21]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.6248]	53.5+0.6s
[3200/32208]	[L1: 3.6009]	53.0+0.1s
[4800/32208]	[L1: 3.5588]	53.7+0.1s
[6400/32208]	[L1: 3.5430]	53.5+0.1s
[8000/32208]	[L1: 3.5360]	53.1+0.1s
[9600/32208]	[L1: 3.5326]	53.8+0.1s
[11200/32208]	[L1: 3.5151]	54.0+0.1s
[12800/32208]	[L1: 3.5100]	53.4+0.1s
[14400/32208]	[L1: 3.5180]	53.8+0.1s
[16000/32208]	[L1: 3.5236]	53.5+0.1s
[17600/32208]	[L1: 3.5296]	53.8+0.1s
[19200/32208]	[L1: 3.5270]	53.8+0.1s
[20800/32208]	[L1: 3.5305]	53.5+0.1s
[22400/32208]	[L1: 3.5356]	53.0+0.1s
[24000/32208]	[L1: 3.5434]	53.3+0.1s
[25600/32208]	[L1: 3.5454]	53.4+0.1s
[27200/32208]	[L1: 3.5423]	53.4+0.1s
[28800/32208]	[L1: 3.5366]	53.4+0.1s
[30400/32208]	[L1: 3.5356]	53.5+0.1s
[32000/32208]	[L1: 3.5340]	54.5+0.1s

Evaluation:
[ x2]	PSNR: 32.043 (Best: 32.049 @epoch 19)
Forward: 13.47s

Saving...
Total: 14.84s

[Epoch 22]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.4048]	53.1+0.8s
[3200/32208]	[L1: 3.5000]	54.1+0.1s
[4800/32208]	[L1: 3.5112]	54.1+0.1s
[6400/32208]	[L1: 3.5333]	54.5+0.1s
[8000/32208]	[L1: 3.5368]	54.2+0.1s
[9600/32208]	[L1: 3.5343]	53.6+0.1s
[11200/32208]	[L1: 3.5171]	52.7+0.1s
[12800/32208]	[L1: 3.5090]	53.1+0.1s
[14400/32208]	[L1: 3.5224]	54.1+0.1s
[16000/32208]	[L1: 3.5307]	53.7+0.1s
[17600/32208]	[L1: 3.5329]	53.4+0.1s
[19200/32208]	[L1: 3.5189]	53.6+0.1s
[20800/32208]	[L1: 3.5134]	53.3+0.1s
[22400/32208]	[L1: 3.5289]	53.0+0.1s
[24000/32208]	[L1: 3.5291]	53.1+0.1s
[25600/32208]	[L1: 3.5385]	53.1+0.1s
[27200/32208]	[L1: 3.5365]	53.3+0.1s
[28800/32208]	[L1: 3.5394]	52.7+0.1s
[30400/32208]	[L1: 3.5335]	52.7+0.1s
[32000/32208]	[L1: 3.5266]	53.3+0.1s

Evaluation:
[ x2]	PSNR: 32.078 (Best: 32.078 @epoch 22)
Forward: 11.94s

Saving...
Total: 13.26s

[Epoch 23]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.5324]	53.1+0.6s
[3200/32208]	[L1: 3.5371]	54.0+0.1s
[4800/32208]	[L1: 3.5264]	54.0+0.1s
[6400/32208]	[L1: 3.5011]	54.0+0.1s
[8000/32208]	[L1: 3.4968]	54.6+0.1s
[9600/32208]	[L1: 3.5069]	54.6+0.1s
[11200/32208]	[L1: 3.5030]	54.1+0.1s
[12800/32208]	[L1: 3.5117]	52.8+0.1s
[14400/32208]	[L1: 3.5208]	53.2+0.1s
[16000/32208]	[L1: 3.5083]	53.7+0.1s
[17600/32208]	[L1: 3.5131]	53.5+0.1s
[19200/32208]	[L1: 3.5122]	53.6+0.1s
[20800/32208]	[L1: 3.5104]	53.9+0.1s
[22400/32208]	[L1: 3.5083]	53.9+0.1s
[24000/32208]	[L1: 3.5121]	53.5+0.1s
[25600/32208]	[L1: 3.5222]	53.0+0.1s
[27200/32208]	[L1: 3.5211]	53.7+0.1s
[28800/32208]	[L1: 3.5267]	54.3+0.1s
[30400/32208]	[L1: 3.5215]	53.3+0.1s
[32000/32208]	[L1: 3.5245]	52.9+0.1s

Evaluation:
[ x2]	PSNR: 32.071 (Best: 32.078 @epoch 22)
Forward: 11.20s

Saving...
Total: 12.34s

[Epoch 24]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.5368]	53.8+0.6s
[3200/32208]	[L1: 3.4956]	53.2+0.1s
[4800/32208]	[L1: 3.4955]	54.0+0.1s
[6400/32208]	[L1: 3.5079]	53.5+0.1s
[8000/32208]	[L1: 3.5109]	53.3+0.1s
[9600/32208]	[L1: 3.4952]	53.1+0.1s
[11200/32208]	[L1: 3.5010]	53.4+0.1s
[12800/32208]	[L1: 3.5241]	53.0+0.1s
[14400/32208]	[L1: 3.5238]	53.1+0.1s
[16000/32208]	[L1: 3.5179]	52.6+0.1s
[17600/32208]	[L1: 3.5335]	53.0+0.1s
[19200/32208]	[L1: 3.5291]	53.4+0.1s
[20800/32208]	[L1: 3.5346]	53.0+0.1s
[22400/32208]	[L1: 3.5316]	53.2+0.1s
[24000/32208]	[L1: 3.5215]	53.6+0.1s
[25600/32208]	[L1: 3.5193]	53.6+0.1s
[27200/32208]	[L1: 3.5101]	53.6+0.1s
[28800/32208]	[L1: 3.5045]	53.7+0.1s
[30400/32208]	[L1: 3.5052]	53.9+0.1s
[32000/32208]	[L1: 3.5123]	53.8+0.1s

Evaluation:
[ x2]	PSNR: 32.069 (Best: 32.078 @epoch 22)
Forward: 11.83s

Saving...
Total: 13.23s

[Epoch 25]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.5541]	52.9+0.6s
[3200/32208]	[L1: 3.5066]	53.9+0.1s
[4800/32208]	[L1: 3.5161]	53.6+0.1s
[6400/32208]	[L1: 3.4824]	53.0+0.1s
[8000/32208]	[L1: 3.4801]	53.0+0.1s
[9600/32208]	[L1: 3.4824]	52.7+0.1s
[11200/32208]	[L1: 3.4811]	53.1+0.1s
[12800/32208]	[L1: 3.4886]	53.5+0.1s
[14400/32208]	[L1: 3.5050]	53.2+0.1s
[16000/32208]	[L1: 3.5087]	53.1+0.1s
[17600/32208]	[L1: 3.5157]	52.6+0.1s
[19200/32208]	[L1: 3.5268]	52.8+0.1s
[20800/32208]	[L1: 3.5273]	53.1+0.1s
[22400/32208]	[L1: 3.5152]	53.6+0.1s
[24000/32208]	[L1: 3.5196]	53.5+0.1s
[25600/32208]	[L1: 3.5131]	52.7+0.1s
[27200/32208]	[L1: 3.5074]	52.7+0.1s
[28800/32208]	[L1: 3.5024]	53.0+0.1s
[30400/32208]	[L1: 3.4964]	53.7+0.1s
[32000/32208]	[L1: 3.5048]	52.9+0.1s

Evaluation:
[ x2]	PSNR: 32.090 (Best: 32.090 @epoch 25)
Forward: 11.94s

Saving...
Total: 13.28s

[Epoch 26]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.4584]	52.7+0.6s
[3200/32208]	[L1: 3.4411]	52.9+0.1s
[4800/32208]	[L1: 3.4929]	52.7+0.1s
[6400/32208]	[L1: 3.4945]	52.8+0.1s
[8000/32208]	[L1: 3.4846]	52.7+0.1s
[9600/32208]	[L1: 3.4783]	52.5+0.1s
[11200/32208]	[L1: 3.4995]	53.1+0.1s
[12800/32208]	[L1: 3.4966]	53.6+0.1s
[14400/32208]	[L1: 3.5144]	52.8+0.1s
[16000/32208]	[L1: 3.5157]	53.1+0.1s
[17600/32208]	[L1: 3.5195]	52.9+0.1s
[19200/32208]	[L1: 3.5273]	52.9+0.1s
[20800/32208]	[L1: 3.5229]	52.8+0.1s
[22400/32208]	[L1: 3.5205]	53.0+0.1s
[24000/32208]	[L1: 3.5222]	53.2+0.1s
[25600/32208]	[L1: 3.5185]	52.9+0.1s
[27200/32208]	[L1: 3.5082]	52.9+0.1s
[28800/32208]	[L1: 3.5057]	53.1+0.1s
[30400/32208]	[L1: 3.5008]	53.1+0.1s
[32000/32208]	[L1: 3.5032]	53.0+0.1s

Evaluation:
[ x2]	PSNR: 32.086 (Best: 32.090 @epoch 25)
Forward: 11.57s

Saving...
Total: 12.89s

[Epoch 27]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.4537]	53.1+0.7s
[3200/32208]	[L1: 3.4685]	52.9+0.1s
[4800/32208]	[L1: 3.4751]	52.5+0.1s
[6400/32208]	[L1: 3.4886]	52.4+0.1s
[8000/32208]	[L1: 3.4868]	53.1+0.1s
[9600/32208]	[L1: 3.4850]	52.7+0.1s
[11200/32208]	[L1: 3.4925]	52.7+0.1s
[12800/32208]	[L1: 3.4920]	53.0+0.1s
[14400/32208]	[L1: 3.4950]	52.8+0.1s
[16000/32208]	[L1: 3.4759]	52.7+0.1s
[17600/32208]	[L1: 3.4641]	52.8+0.1s
[19200/32208]	[L1: 3.4642]	52.9+0.1s
[20800/32208]	[L1: 3.4630]	52.6+0.1s
[22400/32208]	[L1: 3.4681]	52.5+0.1s
[24000/32208]	[L1: 3.4718]	52.9+0.1s
[25600/32208]	[L1: 3.4771]	52.9+0.1s
[27200/32208]	[L1: 3.4811]	53.0+0.1s
[28800/32208]	[L1: 3.4845]	52.7+0.1s
[30400/32208]	[L1: 3.4832]	53.4+0.1s
[32000/32208]	[L1: 3.4904]	53.1+0.1s

Evaluation:
[ x2]	PSNR: 32.070 (Best: 32.090 @epoch 25)
Forward: 11.49s

Saving...
Total: 12.64s

[Epoch 28]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.3760]	52.6+0.6s
[3200/32208]	[L1: 3.4544]	52.8+0.1s
[4800/32208]	[L1: 3.4534]	53.2+0.1s
[6400/32208]	[L1: 3.4382]	52.6+0.1s
[8000/32208]	[L1: 3.4851]	52.9+0.1s
[9600/32208]	[L1: 3.4697]	52.8+0.1s
[11200/32208]	[L1: 3.4630]	52.6+0.1s
[12800/32208]	[L1: 3.4526]	52.8+0.1s
[14400/32208]	[L1: 3.4552]	53.2+0.1s
[16000/32208]	[L1: 3.4560]	52.5+0.1s
[17600/32208]	[L1: 3.4536]	53.2+0.1s
[19200/32208]	[L1: 3.4646]	52.5+0.1s
[20800/32208]	[L1: 3.4675]	52.5+0.1s
[22400/32208]	[L1: 3.4766]	53.3+0.1s
[24000/32208]	[L1: 3.4833]	53.0+0.1s
[25600/32208]	[L1: 3.4770]	52.4+0.1s
[27200/32208]	[L1: 3.4891]	53.0+0.1s
[28800/32208]	[L1: 3.4933]	52.4+0.1s
[30400/32208]	[L1: 3.4899]	53.0+0.1s
[32000/32208]	[L1: 3.4921]	53.0+0.1s

Evaluation:
[ x2]	PSNR: 32.080 (Best: 32.090 @epoch 25)
Forward: 11.91s

Saving...
Total: 13.80s

[Epoch 29]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.5582]	52.4+0.7s
[3200/32208]	[L1: 3.4982]	52.5+0.1s
[4800/32208]	[L1: 3.5218]	52.6+0.1s
[6400/32208]	[L1: 3.5300]	52.8+0.1s
[8000/32208]	[L1: 3.5087]	52.8+0.1s
[9600/32208]	[L1: 3.5257]	52.8+0.1s
[11200/32208]	[L1: 3.5199]	53.1+0.1s
[12800/32208]	[L1: 3.5188]	53.7+0.1s
[14400/32208]	[L1: 3.5066]	53.0+0.1s
[16000/32208]	[L1: 3.5045]	53.8+0.1s
[17600/32208]	[L1: 3.5060]	53.7+0.1s
[19200/32208]	[L1: 3.5121]	53.3+0.1s
[20800/32208]	[L1: 3.5184]	52.8+0.1s
[22400/32208]	[L1: 3.5149]	53.1+0.1s
[24000/32208]	[L1: 3.5085]	53.2+0.1s
[25600/32208]	[L1: 3.5105]	52.5+0.1s
[27200/32208]	[L1: 3.5022]	52.7+0.1s
[28800/32208]	[L1: 3.4961]	52.7+0.1s
[30400/32208]	[L1: 3.4970]	52.4+0.1s
[32000/32208]	[L1: 3.4929]	53.4+0.1s

Evaluation:
[ x2]	PSNR: 32.098 (Best: 32.098 @epoch 29)
Forward: 11.36s

Saving...
Total: 12.73s

[Epoch 30]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.6017]	53.3+0.5s
[3200/32208]	[L1: 3.4781]	53.7+0.1s
[4800/32208]	[L1: 3.4416]	53.3+0.1s
[6400/32208]	[L1: 3.4884]	53.6+0.1s
[8000/32208]	[L1: 3.4746]	52.9+0.1s
[9600/32208]	[L1: 3.4935]	53.0+0.1s
[11200/32208]	[L1: 3.4965]	53.4+0.1s
[12800/32208]	[L1: 3.4807]	52.9+0.1s
[14400/32208]	[L1: 3.4856]	52.4+0.1s
[16000/32208]	[L1: 3.4699]	52.5+0.1s
[17600/32208]	[L1: 3.4628]	52.8+0.1s
[19200/32208]	[L1: 3.4563]	53.1+0.1s
[20800/32208]	[L1: 3.4731]	53.2+0.1s
[22400/32208]	[L1: 3.4793]	52.8+0.1s
[24000/32208]	[L1: 3.4776]	52.6+0.1s
[25600/32208]	[L1: 3.4731]	53.4+0.1s
[27200/32208]	[L1: 3.4719]	52.6+0.1s
[28800/32208]	[L1: 3.4718]	52.5+0.1s
[30400/32208]	[L1: 3.4726]	52.9+0.1s
[32000/32208]	[L1: 3.4748]	53.3+0.1s

Evaluation:
[ x2]	PSNR: 32.058 (Best: 32.098 @epoch 29)
Forward: 11.35s

Saving...
Total: 12.57s

[Epoch 31]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.4352]	52.8+0.6s
[3200/32208]	[L1: 3.4681]	52.7+0.1s
[4800/32208]	[L1: 3.4953]	53.0+0.1s
[6400/32208]	[L1: 3.5025]	53.2+0.1s
[8000/32208]	[L1: 3.4707]	53.3+0.1s
[9600/32208]	[L1: 3.4442]	53.9+0.1s
[11200/32208]	[L1: 3.4735]	54.2+0.1s
[12800/32208]	[L1: 3.4758]	54.8+0.1s
[14400/32208]	[L1: 3.4602]	53.7+0.1s
[16000/32208]	[L1: 3.4783]	53.5+0.1s
[17600/32208]	[L1: 3.4956]	53.0+0.1s
[19200/32208]	[L1: 3.4958]	53.2+0.1s
[20800/32208]	[L1: 3.4923]	52.9+0.1s
[22400/32208]	[L1: 3.4916]	52.7+0.1s
[24000/32208]	[L1: 3.4947]	52.8+0.1s
[25600/32208]	[L1: 3.4878]	52.9+0.1s
[27200/32208]	[L1: 3.4823]	53.0+0.1s
[28800/32208]	[L1: 3.4794]	52.9+0.1s
[30400/32208]	[L1: 3.4749]	52.8+0.1s
[32000/32208]	[L1: 3.4732]	52.8+0.1s

Evaluation:
[ x2]	PSNR: 32.104 (Best: 32.104 @epoch 31)
Forward: 12.02s

Saving...
Total: 13.48s

[Epoch 32]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.4431]	52.8+0.6s
[3200/32208]	[L1: 3.4882]	52.9+0.1s
[4800/32208]	[L1: 3.4708]	53.0+0.1s
[6400/32208]	[L1: 3.4605]	53.0+0.1s
[8000/32208]	[L1: 3.4693]	53.0+0.1s
[9600/32208]	[L1: 3.4783]	52.8+0.1s
[11200/32208]	[L1: 3.4736]	52.8+0.1s
[12800/32208]	[L1: 3.4502]	52.9+0.1s
[14400/32208]	[L1: 3.4488]	52.9+0.1s
[16000/32208]	[L1: 3.4465]	52.9+0.1s
[17600/32208]	[L1: 3.4632]	53.0+0.1s
[19200/32208]	[L1: 3.4664]	53.8+0.1s
[20800/32208]	[L1: 3.4653]	54.7+0.1s
[22400/32208]	[L1: 3.4646]	54.6+0.1s
[24000/32208]	[L1: 3.4675]	54.7+0.1s
[25600/32208]	[L1: 3.4668]	55.5+0.1s
[27200/32208]	[L1: 3.4677]	55.6+0.1s
[28800/32208]	[L1: 3.4671]	55.4+0.1s
[30400/32208]	[L1: 3.4662]	55.4+0.1s
[32000/32208]	[L1: 3.4615]	55.4+0.1s

Evaluation:
[ x2]	PSNR: 32.076 (Best: 32.104 @epoch 31)
Forward: 12.05s

Saving...
Total: 13.20s

[Epoch 33]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.4011]	55.0+0.7s
[3200/32208]	[L1: 3.4390]	55.6+0.1s
[4800/32208]	[L1: 3.4484]	55.6+0.1s
[6400/32208]	[L1: 3.4236]	54.5+0.1s
[8000/32208]	[L1: 3.4317]	54.5+0.1s
[9600/32208]	[L1: 3.4523]	55.5+0.1s
[11200/32208]	[L1: 3.4473]	54.7+0.1s
[12800/32208]	[L1: 3.4382]	55.5+0.1s
[14400/32208]	[L1: 3.4421]	55.6+0.1s
[16000/32208]	[L1: 3.4451]	54.6+0.1s
[17600/32208]	[L1: 3.4462]	54.8+0.1s
[19200/32208]	[L1: 3.4470]	54.9+0.1s
[20800/32208]	[L1: 3.4468]	55.6+0.1s
[22400/32208]	[L1: 3.4488]	55.5+0.1s
[24000/32208]	[L1: 3.4558]	54.8+0.1s
[25600/32208]	[L1: 3.4560]	54.5+0.1s
[27200/32208]	[L1: 3.4574]	54.9+0.1s
[28800/32208]	[L1: 3.4583]	55.4+0.1s
[30400/32208]	[L1: 3.4578]	55.7+0.1s
[32000/32208]	[L1: 3.4643]	54.5+0.1s

Evaluation:
[ x2]	PSNR: 32.130 (Best: 32.130 @epoch 33)
Forward: 12.64s

Saving...
Total: 14.31s

[Epoch 34]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.5012]	55.1+0.7s
[3200/32208]	[L1: 3.4845]	54.7+0.1s
[4800/32208]	[L1: 3.4831]	55.1+0.1s
[6400/32208]	[L1: 3.4844]	55.0+0.1s
[8000/32208]	[L1: 3.4507]	55.2+0.1s
[9600/32208]	[L1: 3.4528]	54.6+0.1s
[11200/32208]	[L1: 3.4646]	54.7+0.1s
[12800/32208]	[L1: 3.4646]	54.5+0.1s
[14400/32208]	[L1: 3.4540]	54.7+0.1s
[16000/32208]	[L1: 3.4645]	54.8+0.1s
[17600/32208]	[L1: 3.4571]	54.6+0.1s
[19200/32208]	[L1: 3.4517]	55.4+0.1s
[20800/32208]	[L1: 3.4510]	55.7+0.1s
[22400/32208]	[L1: 3.4563]	54.7+0.1s
[24000/32208]	[L1: 3.4595]	55.0+0.1s
[25600/32208]	[L1: 3.4548]	55.6+0.1s
[27200/32208]	[L1: 3.4537]	55.8+0.1s
[28800/32208]	[L1: 3.4573]	55.7+0.1s
[30400/32208]	[L1: 3.4617]	55.9+0.1s
[32000/32208]	[L1: 3.4637]	55.7+0.1s

Evaluation:
[ x2]	PSNR: 32.072 (Best: 32.130 @epoch 33)
Forward: 12.35s

Saving...
Total: 13.80s

[Epoch 35]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.4226]	54.9+2.9s
[3200/32208]	[L1: 3.4000]	55.4+0.1s
[4800/32208]	[L1: 3.4449]	55.9+0.1s
[6400/32208]	[L1: 3.4427]	55.3+0.1s
[8000/32208]	[L1: 3.4431]	55.3+0.1s
[9600/32208]	[L1: 3.4457]	55.1+0.1s
[11200/32208]	[L1: 3.4442]	54.8+0.1s
[12800/32208]	[L1: 3.4630]	55.0+0.1s
[14400/32208]	[L1: 3.4669]	54.4+0.1s
[16000/32208]	[L1: 3.4760]	54.8+0.1s
[17600/32208]	[L1: 3.4817]	54.4+0.1s
[19200/32208]	[L1: 3.4820]	54.5+0.1s
[20800/32208]	[L1: 3.4801]	54.9+0.1s
[22400/32208]	[L1: 3.4729]	54.8+0.1s
[24000/32208]	[L1: 3.4714]	55.4+0.1s
[25600/32208]	[L1: 3.4691]	55.7+0.1s
[27200/32208]	[L1: 3.4707]	55.4+0.1s
[28800/32208]	[L1: 3.4674]	55.5+0.1s
[30400/32208]	[L1: 3.4667]	55.7+0.1s
[32000/32208]	[L1: 3.4637]	55.8+0.1s

Evaluation:
[ x2]	PSNR: 32.134 (Best: 32.134 @epoch 35)
Forward: 10.83s

Saving...
Total: 12.33s

[Epoch 36]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.4081]	55.4+0.8s
[3200/32208]	[L1: 3.3938]	55.0+0.1s
[4800/32208]	[L1: 3.3996]	55.5+0.1s
[6400/32208]	[L1: 3.4100]	55.5+0.1s
[8000/32208]	[L1: 3.4381]	55.4+0.1s
[9600/32208]	[L1: 3.4416]	55.8+0.1s
[11200/32208]	[L1: 3.4533]	55.3+0.1s
[12800/32208]	[L1: 3.4497]	55.4+0.1s
[14400/32208]	[L1: 3.4484]	55.8+0.1s
[16000/32208]	[L1: 3.4512]	55.4+0.1s
[17600/32208]	[L1: 3.4550]	54.6+0.1s
[19200/32208]	[L1: 3.4579]	54.7+0.1s
[20800/32208]	[L1: 3.4618]	54.2+0.1s
[22400/32208]	[L1: 3.4672]	54.9+0.1s
[24000/32208]	[L1: 3.4683]	54.5+0.1s
[25600/32208]	[L1: 3.4704]	54.1+0.1s
[27200/32208]	[L1: 3.4682]	54.1+0.1s
[28800/32208]	[L1: 3.4674]	55.0+0.1s
[30400/32208]	[L1: 3.4647]	54.8+0.1s
[32000/32208]	[L1: 3.4655]	54.9+0.1s

Evaluation:
[ x2]	PSNR: 32.129 (Best: 32.134 @epoch 35)
Forward: 13.74s

Saving...
Total: 14.97s

[Epoch 37]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.4584]	54.0+0.7s
[3200/32208]	[L1: 3.4532]	55.0+0.1s
[4800/32208]	[L1: 3.4638]	54.9+0.1s
[6400/32208]	[L1: 3.4292]	54.7+0.1s
[8000/32208]	[L1: 3.4484]	54.7+0.1s
[9600/32208]	[L1: 3.4536]	54.8+0.1s
[11200/32208]	[L1: 3.4550]	55.0+0.1s
[12800/32208]	[L1: 3.4400]	54.9+0.1s
[14400/32208]	[L1: 3.4403]	54.8+0.1s
[16000/32208]	[L1: 3.4388]	54.8+0.1s
[17600/32208]	[L1: 3.4344]	54.6+0.1s
[19200/32208]	[L1: 3.4461]	54.7+0.1s
[20800/32208]	[L1: 3.4431]	55.2+0.1s
[22400/32208]	[L1: 3.4395]	55.4+0.1s
[24000/32208]	[L1: 3.4412]	55.3+0.1s
[25600/32208]	[L1: 3.4443]	55.4+0.1s
[27200/32208]	[L1: 3.4343]	54.8+0.1s
[28800/32208]	[L1: 3.4411]	55.2+0.1s
[30400/32208]	[L1: 3.4388]	55.5+0.1s
[32000/32208]	[L1: 3.4397]	54.9+0.1s

Evaluation:
[ x2]	PSNR: 32.123 (Best: 32.134 @epoch 35)
Forward: 11.54s

Saving...
Total: 12.96s

[Epoch 38]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.3437]	55.0+0.6s
[3200/32208]	[L1: 3.3841]	55.8+0.1s
[4800/32208]	[L1: 3.4497]	54.8+0.1s
[6400/32208]	[L1: 3.4608]	54.8+0.1s
[8000/32208]	[L1: 3.4396]	54.7+0.1s
[9600/32208]	[L1: 3.4399]	54.8+0.1s
[11200/32208]	[L1: 3.4371]	54.7+0.1s
[12800/32208]	[L1: 3.4312]	54.6+0.1s
[14400/32208]	[L1: 3.4411]	54.8+0.1s
[16000/32208]	[L1: 3.4365]	54.9+0.1s
[17600/32208]	[L1: 3.4327]	54.7+0.1s
[19200/32208]	[L1: 3.4312]	54.9+0.1s
[20800/32208]	[L1: 3.4355]	55.1+0.1s
[22400/32208]	[L1: 3.4461]	55.3+0.1s
[24000/32208]	[L1: 3.4437]	55.4+0.1s
[25600/32208]	[L1: 3.4433]	55.5+0.1s
[27200/32208]	[L1: 3.4480]	55.5+0.1s
[28800/32208]	[L1: 3.4483]	55.1+0.1s
[30400/32208]	[L1: 3.4492]	54.9+0.1s
[32000/32208]	[L1: 3.4530]	55.1+0.1s

Evaluation:
[ x2]	PSNR: 32.131 (Best: 32.134 @epoch 35)
Forward: 10.94s

Saving...
Total: 13.13s

[Epoch 39]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.4397]	54.5+0.5s
[3200/32208]	[L1: 3.4320]	55.0+0.1s
[4800/32208]	[L1: 3.4523]	55.1+0.1s
[6400/32208]	[L1: 3.4585]	54.8+0.1s
[8000/32208]	[L1: 3.4822]	56.2+0.1s
[9600/32208]	[L1: 3.4828]	55.6+0.1s
[11200/32208]	[L1: 3.4714]	55.0+0.1s
[12800/32208]	[L1: 3.4770]	55.0+0.1s
[14400/32208]	[L1: 3.4758]	54.6+0.1s
[16000/32208]	[L1: 3.4825]	54.5+0.1s
[17600/32208]	[L1: 3.4678]	54.2+0.1s
[19200/32208]	[L1: 3.4617]	54.2+0.1s
[20800/32208]	[L1: 3.4553]	53.5+0.1s
[22400/32208]	[L1: 3.4582]	52.6+0.1s
[24000/32208]	[L1: 3.4604]	52.6+0.1s
[25600/32208]	[L1: 3.4624]	52.5+0.1s
[27200/32208]	[L1: 3.4578]	52.6+0.1s
[28800/32208]	[L1: 3.4585]	52.8+0.1s
[30400/32208]	[L1: 3.4615]	52.7+0.1s
[32000/32208]	[L1: 3.4617]	52.8+0.1s

Evaluation:
[ x2]	PSNR: 32.139 (Best: 32.139 @epoch 39)
Forward: 11.90s

Saving...
Total: 13.31s

[Epoch 40]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.3998]	52.7+0.6s
[3200/32208]	[L1: 3.4128]	52.8+0.1s
[4800/32208]	[L1: 3.4335]	52.7+0.1s
[6400/32208]	[L1: 3.4192]	52.6+0.1s
[8000/32208]	[L1: 3.4144]	52.8+0.1s
[9600/32208]	[L1: 3.4031]	52.9+0.1s
[11200/32208]	[L1: 3.4264]	52.7+0.1s
[12800/32208]	[L1: 3.4277]	52.8+0.1s
[14400/32208]	[L1: 3.4374]	52.7+0.1s
[16000/32208]	[L1: 3.4454]	52.6+0.1s
[17600/32208]	[L1: 3.4497]	52.8+0.1s
[19200/32208]	[L1: 3.4437]	52.8+0.1s
[20800/32208]	[L1: 3.4423]	52.8+0.1s
[22400/32208]	[L1: 3.4448]	52.8+0.1s
[24000/32208]	[L1: 3.4374]	52.7+0.1s
[25600/32208]	[L1: 3.4449]	52.9+0.1s
[27200/32208]	[L1: 3.4487]	52.8+0.1s
[28800/32208]	[L1: 3.4453]	52.9+0.1s
[30400/32208]	[L1: 3.4439]	52.9+0.1s
[32000/32208]	[L1: 3.4421]	52.9+0.1s

Evaluation:
[ x2]	PSNR: 32.143 (Best: 32.143 @epoch 40)
Forward: 12.45s

Saving...
Total: 13.98s

[Epoch 41]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.4463]	52.7+0.7s
[3200/32208]	[L1: 3.4285]	52.9+0.1s
[4800/32208]	[L1: 3.4354]	53.0+0.1s
[6400/32208]	[L1: 3.4319]	52.8+0.1s
[8000/32208]	[L1: 3.4239]	53.0+0.1s
[9600/32208]	[L1: 3.4217]	53.7+0.1s
[11200/32208]	[L1: 3.3966]	53.6+0.1s
[12800/32208]	[L1: 3.3912]	53.3+0.1s
[14400/32208]	[L1: 3.4023]	53.0+0.1s
[16000/32208]	[L1: 3.4080]	53.6+0.1s
[17600/32208]	[L1: 3.4104]	53.8+0.1s
[19200/32208]	[L1: 3.4131]	53.8+0.1s
[20800/32208]	[L1: 3.4191]	53.7+0.1s
[22400/32208]	[L1: 3.4241]	53.8+0.1s
[24000/32208]	[L1: 3.4254]	53.7+0.1s
[25600/32208]	[L1: 3.4264]	53.8+0.1s
[27200/32208]	[L1: 3.4288]	53.8+0.1s
[28800/32208]	[L1: 3.4269]	53.7+0.1s
[30400/32208]	[L1: 3.4350]	53.7+0.1s
[32000/32208]	[L1: 3.4381]	53.1+0.1s

Evaluation:
[ x2]	PSNR: 32.141 (Best: 32.143 @epoch 40)
Forward: 12.57s

Saving...
Total: 13.90s

[Epoch 42]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.4415]	53.0+0.6s
[3200/32208]	[L1: 3.4234]	52.9+0.1s
[4800/32208]	[L1: 3.4307]	53.1+0.1s
[6400/32208]	[L1: 3.4129]	53.0+0.1s
[8000/32208]	[L1: 3.4114]	53.1+0.1s
[9600/32208]	[L1: 3.4232]	53.0+0.1s
[11200/32208]	[L1: 3.4171]	53.7+0.1s
[12800/32208]	[L1: 3.4134]	53.1+0.1s
[14400/32208]	[L1: 3.4106]	52.8+0.1s
[16000/32208]	[L1: 3.4210]	52.9+0.1s
[17600/32208]	[L1: 3.4232]	53.0+0.1s
[19200/32208]	[L1: 3.4286]	52.8+0.1s
[20800/32208]	[L1: 3.4300]	52.7+0.1s
[22400/32208]	[L1: 3.4388]	52.6+0.1s
[24000/32208]	[L1: 3.4473]	52.8+0.1s
[25600/32208]	[L1: 3.4430]	52.6+0.1s
[27200/32208]	[L1: 3.4480]	52.8+0.1s
[28800/32208]	[L1: 3.4523]	52.8+0.1s
[30400/32208]	[L1: 3.4504]	53.0+0.1s
[32000/32208]	[L1: 3.4477]	53.4+0.1s

Evaluation:
[ x2]	PSNR: 32.138 (Best: 32.143 @epoch 40)
Forward: 12.39s

Saving...
Total: 13.59s

[Epoch 43]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.5390]	53.5+0.6s
[3200/32208]	[L1: 3.4762]	53.6+0.1s
[4800/32208]	[L1: 3.5384]	53.6+0.1s
[6400/32208]	[L1: 3.4987]	53.7+0.1s
[8000/32208]	[L1: 3.4949]	53.7+0.1s
[9600/32208]	[L1: 3.4687]	53.7+0.1s
[11200/32208]	[L1: 3.4596]	53.7+0.1s
[12800/32208]	[L1: 3.4472]	53.7+0.1s
[14400/32208]	[L1: 3.4395]	53.6+0.1s
[16000/32208]	[L1: 3.4325]	53.6+0.1s
[17600/32208]	[L1: 3.4327]	52.7+0.1s
[19200/32208]	[L1: 3.4265]	52.8+0.1s
[20800/32208]	[L1: 3.4224]	53.0+0.1s
[22400/32208]	[L1: 3.4312]	53.0+0.1s
[24000/32208]	[L1: 3.4329]	53.0+0.1s
[25600/32208]	[L1: 3.4346]	53.0+0.1s
[27200/32208]	[L1: 3.4291]	53.0+0.1s
[28800/32208]	[L1: 3.4264]	53.1+0.1s
[30400/32208]	[L1: 3.4324]	53.1+0.1s
[32000/32208]	[L1: 3.4368]	53.0+0.1s

Evaluation:
[ x2]	PSNR: 32.143 (Best: 32.143 @epoch 40)
Forward: 12.50s

Saving...
Total: 14.38s

[Epoch 44]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.3819]	53.0+0.6s
[3200/32208]	[L1: 3.4237]	53.0+0.1s
[4800/32208]	[L1: 3.4616]	53.0+0.1s
[6400/32208]	[L1: 3.4692]	53.1+0.1s
[8000/32208]	[L1: 3.4658]	52.9+0.1s
[9600/32208]	[L1: 3.4519]	53.1+0.1s
[11200/32208]	[L1: 3.4552]	53.1+0.1s
[12800/32208]	[L1: 3.4440]	53.1+0.1s
[14400/32208]	[L1: 3.4604]	53.4+0.1s
[16000/32208]	[L1: 3.4494]	53.7+0.1s
[17600/32208]	[L1: 3.4583]	53.5+0.1s
[19200/32208]	[L1: 3.4542]	53.0+0.1s
[20800/32208]	[L1: 3.4572]	53.2+0.1s
[22400/32208]	[L1: 3.4545]	52.7+0.1s
[24000/32208]	[L1: 3.4525]	52.7+0.1s
[25600/32208]	[L1: 3.4502]	52.6+0.1s
[27200/32208]	[L1: 3.4534]	53.2+0.1s
[28800/32208]	[L1: 3.4490]	53.5+0.1s
[30400/32208]	[L1: 3.4416]	52.8+0.1s
[32000/32208]	[L1: 3.4394]	52.7+0.1s

Evaluation:
[ x2]	PSNR: 32.170 (Best: 32.170 @epoch 44)
Forward: 11.63s

Saving...
Total: 13.04s

[Epoch 45]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.4525]	53.0+0.6s
[3200/32208]	[L1: 3.4140]	52.9+0.1s
[4800/32208]	[L1: 3.4212]	53.0+0.1s
[6400/32208]	[L1: 3.4166]	53.4+0.1s
[8000/32208]	[L1: 3.4238]	53.3+0.1s
[9600/32208]	[L1: 3.4420]	52.8+0.1s
[11200/32208]	[L1: 3.4429]	53.0+0.1s
[12800/32208]	[L1: 3.4432]	52.9+0.1s
[14400/32208]	[L1: 3.4403]	52.8+0.1s
[16000/32208]	[L1: 3.4458]	53.2+0.1s
[17600/32208]	[L1: 3.4479]	53.0+0.1s
[19200/32208]	[L1: 3.4496]	52.9+0.1s
[20800/32208]	[L1: 3.4554]	53.8+0.1s
[22400/32208]	[L1: 3.4514]	52.8+0.1s
[24000/32208]	[L1: 3.4503]	53.2+0.1s
[25600/32208]	[L1: 3.4475]	53.2+0.1s
[27200/32208]	[L1: 3.4451]	52.9+0.1s
[28800/32208]	[L1: 3.4417]	53.1+0.1s
[30400/32208]	[L1: 3.4444]	53.1+0.1s
[32000/32208]	[L1: 3.4493]	52.7+0.1s

Evaluation:
[ x2]	PSNR: 32.150 (Best: 32.170 @epoch 44)
Forward: 12.10s

Saving...
Total: 14.00s

[Epoch 46]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.3559]	52.8+0.6s
[3200/32208]	[L1: 3.4480]	53.6+0.1s
[4800/32208]	[L1: 3.4936]	52.9+0.1s
[6400/32208]	[L1: 3.4511]	52.8+0.1s
[8000/32208]	[L1: 3.4422]	52.8+0.1s
[9600/32208]	[L1: 3.4533]	52.8+0.1s
[11200/32208]	[L1: 3.4530]	52.5+0.1s
[12800/32208]	[L1: 3.4542]	52.5+0.1s
[14400/32208]	[L1: 3.4448]	52.5+0.1s
[16000/32208]	[L1: 3.4458]	52.5+0.1s
[17600/32208]	[L1: 3.4414]	52.4+0.1s
[19200/32208]	[L1: 3.4447]	52.8+0.1s
[20800/32208]	[L1: 3.4482]	52.5+0.1s
[22400/32208]	[L1: 3.4550]	52.5+0.1s
[24000/32208]	[L1: 3.4578]	52.7+0.1s
[25600/32208]	[L1: 3.4441]	52.6+0.1s
[27200/32208]	[L1: 3.4410]	52.5+0.1s
[28800/32208]	[L1: 3.4388]	52.6+0.1s
[30400/32208]	[L1: 3.4382]	52.5+0.1s
[32000/32208]	[L1: 3.4396]	52.7+0.1s

Evaluation:
[ x2]	PSNR: 32.148 (Best: 32.170 @epoch 44)
Forward: 11.49s

Saving...
Total: 12.93s

[Epoch 47]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.4477]	52.7+0.8s
[3200/32208]	[L1: 3.4692]	52.7+0.1s
[4800/32208]	[L1: 3.4652]	52.9+0.1s
[6400/32208]	[L1: 3.4809]	52.9+0.1s
[8000/32208]	[L1: 3.4590]	52.8+0.1s
[9600/32208]	[L1: 3.4506]	52.7+0.1s
[11200/32208]	[L1: 3.4369]	52.9+0.1s
[12800/32208]	[L1: 3.4515]	52.8+0.1s
[14400/32208]	[L1: 3.4400]	53.0+0.1s
[16000/32208]	[L1: 3.4403]	52.7+0.1s
[17600/32208]	[L1: 3.4387]	52.6+0.1s
[19200/32208]	[L1: 3.4283]	52.7+0.1s
[20800/32208]	[L1: 3.4350]	52.7+0.1s
[22400/32208]	[L1: 3.4400]	52.6+0.1s
[24000/32208]	[L1: 3.4372]	53.1+0.1s
[25600/32208]	[L1: 3.4345]	52.7+0.1s
[27200/32208]	[L1: 3.4321]	52.7+0.1s
[28800/32208]	[L1: 3.4362]	52.7+0.1s
[30400/32208]	[L1: 3.4335]	52.6+0.1s
[32000/32208]	[L1: 3.4377]	52.7+0.1s

Evaluation:
[ x2]	PSNR: 32.165 (Best: 32.170 @epoch 44)
Forward: 11.22s

Saving...
Total: 12.49s

[Epoch 48]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.3653]	52.7+0.7s
[3200/32208]	[L1: 3.3536]	52.6+0.1s
[4800/32208]	[L1: 3.3002]	53.6+0.1s
[6400/32208]	[L1: 3.3071]	53.6+0.1s
[8000/32208]	[L1: 3.3445]	53.5+0.1s
[9600/32208]	[L1: 3.3540]	53.5+0.1s
[11200/32208]	[L1: 3.4050]	53.4+0.1s
[12800/32208]	[L1: 3.4142]	53.4+0.1s
[14400/32208]	[L1: 3.4179]	53.6+0.1s
[16000/32208]	[L1: 3.4167]	53.2+0.1s
[17600/32208]	[L1: 3.4132]	53.5+0.1s
[19200/32208]	[L1: 3.4209]	53.6+0.1s
[20800/32208]	[L1: 3.4296]	53.5+0.1s
[22400/32208]	[L1: 3.4293]	53.5+0.1s
[24000/32208]	[L1: 3.4281]	53.5+0.1s
[25600/32208]	[L1: 3.4289]	53.8+0.1s
[27200/32208]	[L1: 3.4275]	53.4+0.1s
[28800/32208]	[L1: 3.4337]	53.6+0.1s
[30400/32208]	[L1: 3.4380]	53.5+0.1s
[32000/32208]	[L1: 3.4326]	53.5+0.1s

Evaluation:
[ x2]	PSNR: 32.162 (Best: 32.170 @epoch 44)
Forward: 12.11s

Saving...
Total: 13.24s

[Epoch 49]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.4509]	53.2+0.6s
[3200/32208]	[L1: 3.4476]	53.3+0.1s
[4800/32208]	[L1: 3.4647]	53.4+0.1s
[6400/32208]	[L1: 3.4741]	53.3+0.1s
[8000/32208]	[L1: 3.4604]	53.1+0.1s
[9600/32208]	[L1: 3.4588]	53.4+0.1s
[11200/32208]	[L1: 3.4334]	53.5+0.1s
[12800/32208]	[L1: 3.4166]	53.6+0.1s
[14400/32208]	[L1: 3.4035]	53.4+0.1s
[16000/32208]	[L1: 3.3961]	53.6+0.1s
[17600/32208]	[L1: 3.3974]	53.6+0.1s
[19200/32208]	[L1: 3.4012]	53.3+0.1s
[20800/32208]	[L1: 3.4111]	53.3+0.1s
[22400/32208]	[L1: 3.4118]	53.2+0.1s
[24000/32208]	[L1: 3.4148]	52.6+0.1s
[25600/32208]	[L1: 3.4157]	52.8+0.1s
[27200/32208]	[L1: 3.4221]	52.7+0.1s
[28800/32208]	[L1: 3.4257]	52.8+0.1s
[30400/32208]	[L1: 3.4214]	52.7+0.1s
[32000/32208]	[L1: 3.4234]	53.1+0.1s

Evaluation:
[ x2]	PSNR: 32.157 (Best: 32.170 @epoch 44)
Forward: 11.92s

Saving...
Total: 13.12s

[Epoch 50]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.2370]	52.5+0.6s
[3200/32208]	[L1: 3.3512]	52.7+0.1s
[4800/32208]	[L1: 3.3887]	52.8+0.1s
[6400/32208]	[L1: 3.4057]	52.7+0.1s
[8000/32208]	[L1: 3.4108]	52.6+0.1s
[9600/32208]	[L1: 3.4266]	52.6+0.1s
[11200/32208]	[L1: 3.4154]	52.6+0.1s
[12800/32208]	[L1: 3.4308]	52.5+0.1s
[14400/32208]	[L1: 3.4297]	52.5+0.1s
[16000/32208]	[L1: 3.4314]	52.5+0.1s
[17600/32208]	[L1: 3.4302]	52.5+0.1s
[19200/32208]	[L1: 3.4347]	52.7+0.1s
[20800/32208]	[L1: 3.4412]	52.7+0.1s
[22400/32208]	[L1: 3.4376]	52.6+0.1s
[24000/32208]	[L1: 3.4290]	52.5+0.1s
[25600/32208]	[L1: 3.4293]	52.6+0.1s
[27200/32208]	[L1: 3.4345]	52.9+0.1s
[28800/32208]	[L1: 3.4275]	53.0+0.1s
[30400/32208]	[L1: 3.4354]	52.7+0.1s
[32000/32208]	[L1: 3.4328]	53.0+0.1s

Evaluation:
[ x2]	PSNR: 32.158 (Best: 32.170 @epoch 44)
Forward: 12.09s

Saving...
Total: 13.23s

[Epoch 51]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.4115]	52.7+0.5s
[3200/32208]	[L1: 3.4429]	52.8+0.1s
[4800/32208]	[L1: 3.4550]	52.7+0.1s
[6400/32208]	[L1: 3.4592]	52.6+0.1s
[8000/32208]	[L1: 3.4509]	52.6+0.1s
[9600/32208]	[L1: 3.4249]	52.5+0.1s
[11200/32208]	[L1: 3.4244]	52.8+0.1s
[12800/32208]	[L1: 3.4198]	53.2+0.1s
[14400/32208]	[L1: 3.4161]	52.6+0.1s
[16000/32208]	[L1: 3.4160]	52.8+0.1s
[17600/32208]	[L1: 3.4208]	53.7+0.1s
[19200/32208]	[L1: 3.4163]	53.8+0.1s
[20800/32208]	[L1: 3.4133]	53.9+0.1s
[22400/32208]	[L1: 3.4185]	54.1+0.1s
[24000/32208]	[L1: 3.4218]	54.4+0.1s
[25600/32208]	[L1: 3.4200]	54.5+0.1s
[27200/32208]	[L1: 3.4171]	54.8+0.1s
[28800/32208]	[L1: 3.4177]	55.0+0.1s
[30400/32208]	[L1: 3.4224]	54.9+0.1s
[32000/32208]	[L1: 3.4226]	54.8+0.1s

Evaluation:
[ x2]	PSNR: 32.171 (Best: 32.171 @epoch 51)
Forward: 13.12s

Saving...
Total: 14.62s

[Epoch 52]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.4652]	54.9+0.6s
[3200/32208]	[L1: 3.4563]	55.3+0.1s
[4800/32208]	[L1: 3.4511]	55.2+0.1s
[6400/32208]	[L1: 3.4437]	55.2+0.1s
[8000/32208]	[L1: 3.4222]	55.1+0.1s
[9600/32208]	[L1: 3.4226]	55.6+0.1s
[11200/32208]	[L1: 3.4255]	55.3+0.1s
[12800/32208]	[L1: 3.4251]	55.5+0.1s
[14400/32208]	[L1: 3.4361]	55.6+0.1s
[16000/32208]	[L1: 3.4442]	55.4+0.1s
[17600/32208]	[L1: 3.4360]	55.1+0.1s
[19200/32208]	[L1: 3.4293]	55.1+0.1s
[20800/32208]	[L1: 3.4242]	55.0+0.1s
[22400/32208]	[L1: 3.4283]	55.3+0.1s
[24000/32208]	[L1: 3.4238]	55.5+0.1s
[25600/32208]	[L1: 3.4232]	55.2+0.1s
[27200/32208]	[L1: 3.4233]	55.2+0.1s
[28800/32208]	[L1: 3.4243]	55.6+0.1s
[30400/32208]	[L1: 3.4225]	55.3+0.1s
[32000/32208]	[L1: 3.4251]	55.6+0.1s

Evaluation:
[ x2]	PSNR: 32.179 (Best: 32.179 @epoch 52)
Forward: 13.02s

Saving...
Total: 14.47s

[Epoch 53]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.4374]	54.8+0.6s
[3200/32208]	[L1: 3.3888]	54.8+0.1s
[4800/32208]	[L1: 3.4396]	54.6+0.1s
[6400/32208]	[L1: 3.4147]	54.6+0.1s
[8000/32208]	[L1: 3.4004]	54.6+0.1s
[9600/32208]	[L1: 3.3957]	54.6+0.1s
[11200/32208]	[L1: 3.4041]	54.1+0.1s
[12800/32208]	[L1: 3.3893]	54.8+0.1s
[14400/32208]	[L1: 3.3938]	55.3+0.1s
[16000/32208]	[L1: 3.4102]	54.8+0.1s
[17600/32208]	[L1: 3.4268]	55.1+0.1s
[19200/32208]	[L1: 3.4436]	54.7+0.1s
[20800/32208]	[L1: 3.4418]	54.8+0.1s
[22400/32208]	[L1: 3.4336]	55.2+0.1s
[24000/32208]	[L1: 3.4275]	55.3+0.1s
[25600/32208]	[L1: 3.4326]	55.2+0.1s
[27200/32208]	[L1: 3.4328]	55.4+0.1s
[28800/32208]	[L1: 3.4246]	55.2+0.1s
[30400/32208]	[L1: 3.4237]	55.3+0.1s
[32000/32208]	[L1: 3.4209]	55.4+0.1s

Evaluation:
[ x2]	PSNR: 32.177 (Best: 32.179 @epoch 52)
Forward: 13.54s

Saving...
Total: 14.58s

[Epoch 54]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.4675]	54.9+0.7s
[3200/32208]	[L1: 3.5073]	55.1+0.1s
[4800/32208]	[L1: 3.4535]	55.2+0.1s
[6400/32208]	[L1: 3.4385]	55.4+0.1s
[8000/32208]	[L1: 3.4313]	55.1+0.1s
[9600/32208]	[L1: 3.4157]	55.7+0.1s
[11200/32208]	[L1: 3.4114]	55.3+0.1s
[12800/32208]	[L1: 3.4237]	55.6+0.1s
[14400/32208]	[L1: 3.4239]	55.6+0.1s
[16000/32208]	[L1: 3.4232]	55.7+0.1s
[17600/32208]	[L1: 3.4289]	55.5+0.1s
[19200/32208]	[L1: 3.4195]	55.9+0.1s
[20800/32208]	[L1: 3.4187]	55.6+0.1s
[22400/32208]	[L1: 3.4297]	54.6+0.1s
[24000/32208]	[L1: 3.4317]	54.7+0.1s
[25600/32208]	[L1: 3.4299]	55.3+0.1s
[27200/32208]	[L1: 3.4227]	55.0+0.1s
[28800/32208]	[L1: 3.4197]	54.6+0.1s
[30400/32208]	[L1: 3.4232]	55.0+0.1s
[32000/32208]	[L1: 3.4252]	55.3+0.1s

Evaluation:
[ x2]	PSNR: 32.187 (Best: 32.187 @epoch 54)
Forward: 12.45s

Saving...
Total: 13.95s

[Epoch 55]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.4423]	54.3+0.5s
[3200/32208]	[L1: 3.4233]	54.6+0.1s
[4800/32208]	[L1: 3.3935]	55.0+0.1s
[6400/32208]	[L1: 3.4042]	55.4+0.1s
[8000/32208]	[L1: 3.4153]	55.3+0.1s
[9600/32208]	[L1: 3.3963]	55.4+0.1s
[11200/32208]	[L1: 3.3997]	55.1+0.1s
[12800/32208]	[L1: 3.4059]	55.4+0.1s
[14400/32208]	[L1: 3.4049]	55.2+0.1s
[16000/32208]	[L1: 3.4105]	55.2+0.1s
[17600/32208]	[L1: 3.4121]	55.2+0.1s
[19200/32208]	[L1: 3.4017]	55.2+0.1s
[20800/32208]	[L1: 3.3996]	55.1+0.1s
[22400/32208]	[L1: 3.4104]	55.3+0.1s
[24000/32208]	[L1: 3.4070]	55.0+0.1s
[25600/32208]	[L1: 3.4099]	55.7+0.1s
[27200/32208]	[L1: 3.4123]	55.3+0.1s
[28800/32208]	[L1: 3.4123]	55.3+0.1s
[30400/32208]	[L1: 3.4081]	55.0+0.1s
[32000/32208]	[L1: 3.4055]	54.7+0.1s

Evaluation:
[ x2]	PSNR: 32.169 (Best: 32.187 @epoch 54)
Forward: 13.30s

Saving...
Total: 14.50s

[Epoch 56]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.4635]	54.5+0.6s
[3200/32208]	[L1: 3.4145]	55.3+0.1s
[4800/32208]	[L1: 3.4461]	55.7+0.1s
[6400/32208]	[L1: 3.4132]	55.3+0.1s
[8000/32208]	[L1: 3.4017]	54.9+0.1s
[9600/32208]	[L1: 3.4107]	54.9+0.1s
[11200/32208]	[L1: 3.3960]	54.9+0.1s
[12800/32208]	[L1: 3.4003]	54.9+0.1s
[14400/32208]	[L1: 3.4038]	54.9+0.1s
[16000/32208]	[L1: 3.4131]	54.7+0.1s
[17600/32208]	[L1: 3.4135]	55.1+0.1s
[19200/32208]	[L1: 3.4100]	55.0+0.1s
[20800/32208]	[L1: 3.4172]	55.2+0.1s
[22400/32208]	[L1: 3.4154]	54.8+0.1s
[24000/32208]	[L1: 3.4173]	54.8+0.1s
[25600/32208]	[L1: 3.4179]	54.8+0.1s
[27200/32208]	[L1: 3.4151]	54.4+0.1s
[28800/32208]	[L1: 3.4060]	54.8+0.1s
[30400/32208]	[L1: 3.4047]	54.4+0.1s
[32000/32208]	[L1: 3.4029]	54.5+0.1s

Evaluation:
[ x2]	PSNR: 32.150 (Best: 32.187 @epoch 54)
Forward: 13.52s

Saving...
Total: 14.67s

[Epoch 57]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.3801]	54.3+0.5s
[3200/32208]	[L1: 3.3982]	54.6+0.1s
[4800/32208]	[L1: 3.3858]	54.6+0.1s
[6400/32208]	[L1: 3.4034]	54.5+0.1s
[8000/32208]	[L1: 3.3899]	54.6+0.1s
[9600/32208]	[L1: 3.3985]	54.6+0.1s
[11200/32208]	[L1: 3.4017]	54.6+0.1s
[12800/32208]	[L1: 3.4028]	54.4+0.1s
[14400/32208]	[L1: 3.3986]	54.3+0.1s
[16000/32208]	[L1: 3.4088]	55.4+0.1s
[17600/32208]	[L1: 3.4089]	55.6+0.1s
[19200/32208]	[L1: 3.4163]	55.3+0.1s
[20800/32208]	[L1: 3.4242]	55.3+0.1s
[22400/32208]	[L1: 3.4154]	55.4+0.1s
[24000/32208]	[L1: 3.4158]	55.3+0.1s
[25600/32208]	[L1: 3.4154]	55.6+0.1s
[27200/32208]	[L1: 3.4183]	55.8+0.1s
[28800/32208]	[L1: 3.4190]	55.6+0.1s
[30400/32208]	[L1: 3.4165]	55.4+0.1s
[32000/32208]	[L1: 3.4195]	55.7+0.1s

Evaluation:
[ x2]	PSNR: 32.184 (Best: 32.187 @epoch 54)
Forward: 13.11s

Saving...
Total: 14.31s

[Epoch 58]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.3617]	54.7+0.6s
[3200/32208]	[L1: 3.3914]	55.5+0.1s
[4800/32208]	[L1: 3.3895]	55.5+0.1s
[6400/32208]	[L1: 3.3818]	55.5+0.1s
[8000/32208]	[L1: 3.3948]	55.9+0.1s
[9600/32208]	[L1: 3.3733]	55.2+0.1s
[11200/32208]	[L1: 3.3985]	55.3+0.1s
[12800/32208]	[L1: 3.3927]	54.5+0.1s
[14400/32208]	[L1: 3.3881]	54.8+0.1s
[16000/32208]	[L1: 3.3796]	54.8+0.1s
[17600/32208]	[L1: 3.3912]	54.7+0.1s
[19200/32208]	[L1: 3.3931]	54.6+0.1s
[20800/32208]	[L1: 3.3955]	54.6+0.1s
[22400/32208]	[L1: 3.4002]	54.7+0.1s
[24000/32208]	[L1: 3.4017]	54.6+0.1s
[25600/32208]	[L1: 3.4035]	54.5+0.1s
[27200/32208]	[L1: 3.4056]	54.8+0.1s
[28800/32208]	[L1: 3.4089]	54.9+0.1s
[30400/32208]	[L1: 3.4087]	54.8+0.1s
[32000/32208]	[L1: 3.4049]	54.8+0.1s

Evaluation:
[ x2]	PSNR: 32.191 (Best: 32.191 @epoch 58)
Forward: 11.75s

Saving...
Total: 13.22s

[Epoch 59]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.3152]	54.3+0.6s
[3200/32208]	[L1: 3.3303]	54.8+0.1s
[4800/32208]	[L1: 3.3178]	54.6+0.1s
[6400/32208]	[L1: 3.3519]	54.8+0.1s
[8000/32208]	[L1: 3.3718]	54.9+0.1s
[9600/32208]	[L1: 3.3801]	54.7+0.1s
[11200/32208]	[L1: 3.3991]	55.0+0.1s
[12800/32208]	[L1: 3.4273]	55.0+0.1s
[14400/32208]	[L1: 3.4281]	54.9+0.1s
[16000/32208]	[L1: 3.4111]	54.7+0.1s
[17600/32208]	[L1: 3.4085]	54.8+0.1s
[19200/32208]	[L1: 3.4092]	55.0+0.1s
[20800/32208]	[L1: 3.4118]	54.9+0.1s
[22400/32208]	[L1: 3.4195]	55.1+0.1s
[24000/32208]	[L1: 3.4164]	54.6+0.1s
[25600/32208]	[L1: 3.4103]	55.1+0.1s
[27200/32208]	[L1: 3.4084]	55.0+0.1s
[28800/32208]	[L1: 3.4127]	54.7+0.1s
[30400/32208]	[L1: 3.4104]	54.9+0.1s
[32000/32208]	[L1: 3.4104]	55.2+0.1s

Evaluation:
[ x2]	PSNR: 32.148 (Best: 32.191 @epoch 58)
Forward: 12.63s

Saving...
Total: 13.86s

[Epoch 60]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.4083]	54.6+0.8s
[3200/32208]	[L1: 3.4224]	54.9+0.1s
[4800/32208]	[L1: 3.3877]	55.5+0.1s
[6400/32208]	[L1: 3.3932]	55.0+0.1s
[8000/32208]	[L1: 3.4036]	54.7+0.1s
[9600/32208]	[L1: 3.4075]	54.5+0.1s
[11200/32208]	[L1: 3.4160]	54.8+0.1s
[12800/32208]	[L1: 3.4224]	54.6+0.1s
[14400/32208]	[L1: 3.4140]	53.9+0.1s
[16000/32208]	[L1: 3.4276]	54.3+0.1s
[17600/32208]	[L1: 3.4338]	54.6+0.1s
[19200/32208]	[L1: 3.4373]	55.3+0.1s
[20800/32208]	[L1: 3.4237]	55.0+0.1s
[22400/32208]	[L1: 3.4215]	55.7+0.1s
[24000/32208]	[L1: 3.4144]	55.1+0.1s
[25600/32208]	[L1: 3.4151]	55.4+0.1s
[27200/32208]	[L1: 3.4125]	55.4+0.1s
[28800/32208]	[L1: 3.4173]	55.3+0.1s
[30400/32208]	[L1: 3.4160]	55.6+0.1s
[32000/32208]	[L1: 3.4135]	55.4+0.1s

Evaluation:
[ x2]	PSNR: 32.179 (Best: 32.191 @epoch 58)
Forward: 12.92s

Saving...
Total: 14.24s

[Epoch 61]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.4894]	55.0+0.7s
[3200/32208]	[L1: 3.3609]	55.2+0.1s
[4800/32208]	[L1: 3.3947]	55.2+0.1s
[6400/32208]	[L1: 3.3999]	55.3+0.1s
[8000/32208]	[L1: 3.4329]	55.5+0.1s
[9600/32208]	[L1: 3.4332]	55.5+0.1s
[11200/32208]	[L1: 3.4416]	55.4+0.1s
[12800/32208]	[L1: 3.4329]	55.5+0.1s
[14400/32208]	[L1: 3.4243]	54.9+0.1s
[16000/32208]	[L1: 3.4211]	54.8+0.1s
[17600/32208]	[L1: 3.4259]	54.6+0.1s
[19200/32208]	[L1: 3.4226]	54.7+0.1s
[20800/32208]	[L1: 3.4143]	54.6+0.1s
[22400/32208]	[L1: 3.4192]	54.5+0.1s
[24000/32208]	[L1: 3.4104]	54.4+0.1s
[25600/32208]	[L1: 3.4047]	54.6+0.1s
[27200/32208]	[L1: 3.4056]	54.8+0.1s
[28800/32208]	[L1: 3.4060]	54.8+0.1s
[30400/32208]	[L1: 3.4058]	54.9+0.1s
[32000/32208]	[L1: 3.4023]	54.4+0.1s

Evaluation:
[ x2]	PSNR: 32.163 (Best: 32.191 @epoch 58)
Forward: 12.24s

Saving...
Total: 13.47s

[Epoch 62]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.3575]	54.6+0.5s
[3200/32208]	[L1: 3.4003]	55.0+0.1s
[4800/32208]	[L1: 3.3567]	55.1+0.1s
[6400/32208]	[L1: 3.3596]	54.8+0.1s
[8000/32208]	[L1: 3.3481]	54.4+0.1s
[9600/32208]	[L1: 3.3300]	54.6+0.1s
[11200/32208]	[L1: 3.3564]	55.0+0.1s
[12800/32208]	[L1: 3.3682]	54.9+0.1s
[14400/32208]	[L1: 3.3646]	54.8+0.1s
[16000/32208]	[L1: 3.3729]	54.9+0.1s
[17600/32208]	[L1: 3.3871]	54.8+0.1s
[19200/32208]	[L1: 3.3922]	55.0+0.1s
[20800/32208]	[L1: 3.3893]	55.0+0.1s
[22400/32208]	[L1: 3.3998]	55.2+0.1s
[24000/32208]	[L1: 3.4000]	55.0+0.1s
[25600/32208]	[L1: 3.4022]	54.9+0.1s
[27200/32208]	[L1: 3.3951]	55.0+0.1s
[28800/32208]	[L1: 3.3970]	55.0+0.1s
[30400/32208]	[L1: 3.3996]	55.1+0.1s
[32000/32208]	[L1: 3.4044]	55.1+0.1s

Evaluation:
[ x2]	PSNR: 32.182 (Best: 32.191 @epoch 58)
Forward: 11.81s

Saving...
Total: 13.17s

[Epoch 63]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.3819]	54.6+0.6s
[3200/32208]	[L1: 3.4130]	54.9+0.1s
[4800/32208]	[L1: 3.3747]	54.9+0.1s
[6400/32208]	[L1: 3.3747]	55.0+0.1s
[8000/32208]	[L1: 3.3797]	54.7+0.1s
[9600/32208]	[L1: 3.3974]	55.0+0.3s
[11200/32208]	[L1: 3.4116]	54.8+0.1s
[12800/32208]	[L1: 3.4184]	54.8+0.1s
[14400/32208]	[L1: 3.4350]	55.2+0.1s
[16000/32208]	[L1: 3.4497]	55.0+0.1s
[17600/32208]	[L1: 3.4332]	54.8+0.1s
[19200/32208]	[L1: 3.4224]	55.0+0.1s
[20800/32208]	[L1: 3.4229]	54.8+0.1s
[22400/32208]	[L1: 3.4280]	54.8+0.1s
[24000/32208]	[L1: 3.4232]	55.1+0.1s
[25600/32208]	[L1: 3.4275]	54.9+0.1s
[27200/32208]	[L1: 3.4234]	55.1+0.1s
[28800/32208]	[L1: 3.4142]	54.8+0.1s
[30400/32208]	[L1: 3.4128]	55.4+0.1s
[32000/32208]	[L1: 3.4087]	55.0+0.1s

Evaluation:
[ x2]	PSNR: 32.173 (Best: 32.191 @epoch 58)
Forward: 12.32s

Saving...
Total: 13.61s

[Epoch 64]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.3903]	54.3+0.6s
[3200/32208]	[L1: 3.4000]	54.4+0.1s
[4800/32208]	[L1: 3.3912]	54.6+0.1s
[6400/32208]	[L1: 3.4176]	55.0+0.1s
[8000/32208]	[L1: 3.4025]	54.9+0.1s
[9600/32208]	[L1: 3.3834]	55.3+0.1s
[11200/32208]	[L1: 3.3935]	54.8+0.1s
[12800/32208]	[L1: 3.4025]	55.1+0.1s
[14400/32208]	[L1: 3.4053]	54.7+0.1s
[16000/32208]	[L1: 3.3997]	55.2+0.1s
[17600/32208]	[L1: 3.3886]	55.1+0.1s
[19200/32208]	[L1: 3.3869]	54.9+0.1s
[20800/32208]	[L1: 3.3877]	54.7+0.1s
[22400/32208]	[L1: 3.3896]	55.2+0.1s
[24000/32208]	[L1: 3.3908]	55.3+0.1s
[25600/32208]	[L1: 3.3991]	55.0+0.1s
[27200/32208]	[L1: 3.3949]	54.9+0.1s
[28800/32208]	[L1: 3.4019]	55.2+0.1s
[30400/32208]	[L1: 3.4041]	55.2+0.1s
[32000/32208]	[L1: 3.3983]	55.3+0.1s

Evaluation:
[ x2]	PSNR: 32.167 (Best: 32.191 @epoch 58)
Forward: 13.59s

Saving...
Total: 14.92s

[Epoch 65]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.4230]	54.8+0.5s
[3200/32208]	[L1: 3.4317]	55.3+0.1s
[4800/32208]	[L1: 3.4178]	54.6+0.1s
[6400/32208]	[L1: 3.4167]	54.9+0.1s
[8000/32208]	[L1: 3.4147]	54.5+0.1s
[9600/32208]	[L1: 3.4146]	54.8+0.1s
[11200/32208]	[L1: 3.3993]	54.8+0.1s
[12800/32208]	[L1: 3.3961]	55.2+0.1s
[14400/32208]	[L1: 3.3811]	54.5+0.1s
[16000/32208]	[L1: 3.3870]	54.8+0.1s
[17600/32208]	[L1: 3.3883]	54.7+0.1s
[19200/32208]	[L1: 3.3978]	55.0+0.1s
[20800/32208]	[L1: 3.3948]	55.1+0.1s
[22400/32208]	[L1: 3.3973]	55.3+0.1s
[24000/32208]	[L1: 3.3944]	54.5+0.1s
[25600/32208]	[L1: 3.3874]	54.7+0.1s
[27200/32208]	[L1: 3.3934]	55.2+0.1s
[28800/32208]	[L1: 3.3928]	54.9+0.1s
[30400/32208]	[L1: 3.3975]	55.2+0.1s
[32000/32208]	[L1: 3.4001]	55.2+0.1s

Evaluation:
[ x2]	PSNR: 32.197 (Best: 32.197 @epoch 65)
Forward: 15.13s

Saving...
Total: 16.74s

[Epoch 66]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.3086]	54.3+0.8s
[3200/32208]	[L1: 3.3216]	55.0+0.1s
[4800/32208]	[L1: 3.3223]	55.0+0.1s
[6400/32208]	[L1: 3.3370]	55.0+0.1s
[8000/32208]	[L1: 3.3483]	54.9+0.1s
[9600/32208]	[L1: 3.3586]	55.3+0.1s
[11200/32208]	[L1: 3.3514]	55.3+0.1s
[12800/32208]	[L1: 3.3578]	55.4+0.1s
[14400/32208]	[L1: 3.3579]	55.2+0.1s
[16000/32208]	[L1: 3.3575]	55.7+0.1s
[17600/32208]	[L1: 3.3638]	55.3+0.1s
[19200/32208]	[L1: 3.3717]	55.6+0.1s
[20800/32208]	[L1: 3.3729]	55.4+0.1s
[22400/32208]	[L1: 3.3663]	55.7+0.1s
[24000/32208]	[L1: 3.3779]	55.4+0.1s
[25600/32208]	[L1: 3.3729]	55.8+0.1s
[27200/32208]	[L1: 3.3839]	55.9+0.1s
[28800/32208]	[L1: 3.3901]	55.5+0.1s
[30400/32208]	[L1: 3.3884]	55.8+0.1s
[32000/32208]	[L1: 3.3900]	54.6+0.1s

Evaluation:
[ x2]	PSNR: 32.157 (Best: 32.197 @epoch 65)
Forward: 13.63s

Saving...
Total: 14.83s

[Epoch 67]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.3277]	54.6+0.7s
[3200/32208]	[L1: 3.3895]	55.5+0.1s
[4800/32208]	[L1: 3.3839]	54.8+0.1s
[6400/32208]	[L1: 3.3731]	54.4+0.1s
[8000/32208]	[L1: 3.3818]	55.8+0.1s
[9600/32208]	[L1: 3.3977]	55.7+0.1s
[11200/32208]	[L1: 3.3916]	55.5+0.1s
[12800/32208]	[L1: 3.4055]	55.6+0.1s
[14400/32208]	[L1: 3.3976]	55.4+0.1s
[16000/32208]	[L1: 3.3992]	55.3+0.1s
[17600/32208]	[L1: 3.3915]	55.9+0.1s
[19200/32208]	[L1: 3.3915]	55.5+0.1s
[20800/32208]	[L1: 3.4007]	55.0+0.1s
[22400/32208]	[L1: 3.4000]	55.3+0.1s
[24000/32208]	[L1: 3.3999]	55.0+0.1s
[25600/32208]	[L1: 3.3973]	54.7+0.1s
[27200/32208]	[L1: 3.3982]	54.9+0.1s
[28800/32208]	[L1: 3.3926]	54.9+0.1s
[30400/32208]	[L1: 3.3986]	55.1+0.1s
[32000/32208]	[L1: 3.3984]	54.7+0.1s

Evaluation:
[ x2]	PSNR: 32.190 (Best: 32.197 @epoch 65)
Forward: 12.26s

Saving...
Total: 13.54s

[Epoch 68]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.3130]	54.9+0.6s
[3200/32208]	[L1: 3.4049]	55.4+0.1s
[4800/32208]	[L1: 3.4346]	55.2+0.1s
[6400/32208]	[L1: 3.4089]	55.2+0.1s
[8000/32208]	[L1: 3.3906]	55.3+0.1s
[9600/32208]	[L1: 3.3926]	54.9+0.1s
[11200/32208]	[L1: 3.3925]	55.6+0.1s
[12800/32208]	[L1: 3.3930]	55.5+0.1s
[14400/32208]	[L1: 3.3883]	55.6+0.1s
[16000/32208]	[L1: 3.3897]	55.1+0.1s
[17600/32208]	[L1: 3.3923]	55.0+0.1s
[19200/32208]	[L1: 3.3906]	55.3+0.1s
[20800/32208]	[L1: 3.3889]	55.4+0.1s
[22400/32208]	[L1: 3.3936]	55.3+0.1s
[24000/32208]	[L1: 3.3884]	54.6+0.1s
[25600/32208]	[L1: 3.3880]	55.2+0.1s
[27200/32208]	[L1: 3.3932]	55.0+0.1s
[28800/32208]	[L1: 3.3977]	55.4+0.1s
[30400/32208]	[L1: 3.3980]	55.2+0.1s
[32000/32208]	[L1: 3.3981]	55.1+0.1s

Evaluation:
[ x2]	PSNR: 32.202 (Best: 32.202 @epoch 68)
Forward: 11.98s

Saving...
Total: 14.43s

[Epoch 69]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.3342]	54.9+1.4s
[3200/32208]	[L1: 3.3701]	55.2+0.1s
[4800/32208]	[L1: 3.4180]	54.9+0.1s
[6400/32208]	[L1: 3.4177]	55.3+0.1s
[8000/32208]	[L1: 3.4155]	55.2+0.1s
[9600/32208]	[L1: 3.4049]	55.1+0.1s
[11200/32208]	[L1: 3.3819]	54.8+0.1s
[12800/32208]	[L1: 3.3885]	54.7+0.1s
[14400/32208]	[L1: 3.3898]	55.1+0.1s
[16000/32208]	[L1: 3.3873]	55.1+0.1s
[17600/32208]	[L1: 3.3961]	54.8+0.1s
[19200/32208]	[L1: 3.3900]	55.1+0.1s
[20800/32208]	[L1: 3.3861]	55.0+0.1s
[22400/32208]	[L1: 3.3899]	55.6+0.1s
[24000/32208]	[L1: 3.3905]	55.0+0.1s
[25600/32208]	[L1: 3.3977]	55.4+0.1s
[27200/32208]	[L1: 3.3927]	55.5+0.1s
[28800/32208]	[L1: 3.3988]	55.7+0.1s
[30400/32208]	[L1: 3.3988]	55.4+0.1s
[32000/32208]	[L1: 3.3962]	55.7+0.1s

Evaluation:
[ x2]	PSNR: 32.142 (Best: 32.202 @epoch 68)
Forward: 12.59s

Saving...
Total: 13.85s

[Epoch 70]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.4755]	55.1+0.7s
[3200/32208]	[L1: 3.3950]	55.5+0.1s
[4800/32208]	[L1: 3.4217]	54.7+0.1s
[6400/32208]	[L1: 3.4381]	54.9+0.1s
[8000/32208]	[L1: 3.4540]	55.0+0.1s
[9600/32208]	[L1: 3.4447]	54.7+0.1s
[11200/32208]	[L1: 3.4364]	55.3+0.1s
[12800/32208]	[L1: 3.4286]	55.1+0.1s
[14400/32208]	[L1: 3.4216]	55.0+0.1s
[16000/32208]	[L1: 3.4111]	55.4+0.1s
[17600/32208]	[L1: 3.4041]	55.5+0.1s
[19200/32208]	[L1: 3.4032]	55.3+0.1s
[20800/32208]	[L1: 3.3906]	55.2+0.1s
[22400/32208]	[L1: 3.3931]	55.6+0.1s
[24000/32208]	[L1: 3.3901]	55.3+0.1s
[25600/32208]	[L1: 3.3924]	55.2+0.1s
[27200/32208]	[L1: 3.3954]	55.4+0.1s
[28800/32208]	[L1: 3.3902]	54.8+0.1s
[30400/32208]	[L1: 3.3934]	55.5+0.1s
[32000/32208]	[L1: 3.3941]	55.5+0.1s

Evaluation:
[ x2]	PSNR: 32.193 (Best: 32.202 @epoch 68)
Forward: 11.51s

Saving...
Total: 13.61s

[Epoch 71]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.3699]	54.5+0.6s
[3200/32208]	[L1: 3.3592]	55.3+0.1s
[4800/32208]	[L1: 3.3544]	54.7+0.1s
[6400/32208]	[L1: 3.3732]	55.2+0.1s
[8000/32208]	[L1: 3.3925]	54.3+0.1s
[9600/32208]	[L1: 3.3988]	54.9+0.1s
[11200/32208]	[L1: 3.3813]	55.0+0.1s
[12800/32208]	[L1: 3.3947]	55.3+0.1s
[14400/32208]	[L1: 3.3850]	54.9+0.1s
[16000/32208]	[L1: 3.3841]	55.1+0.1s
[17600/32208]	[L1: 3.4006]	55.2+0.1s
[19200/32208]	[L1: 3.4024]	55.1+0.1s
[20800/32208]	[L1: 3.3973]	55.4+0.1s
[22400/32208]	[L1: 3.4005]	54.9+0.1s
[24000/32208]	[L1: 3.3985]	55.7+0.1s
[25600/32208]	[L1: 3.3949]	55.0+0.1s
[27200/32208]	[L1: 3.3907]	55.6+0.1s
[28800/32208]	[L1: 3.3885]	55.6+0.1s
[30400/32208]	[L1: 3.3867]	55.3+0.1s
[32000/32208]	[L1: 3.3871]	55.5+0.1s

Evaluation:
[ x2]	PSNR: 32.202 (Best: 32.202 @epoch 68)
Forward: 12.96s

Saving...
Total: 14.20s

[Epoch 72]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.3670]	54.9+0.6s
[3200/32208]	[L1: 3.2896]	55.2+0.1s
[4800/32208]	[L1: 3.3509]	55.0+0.1s
[6400/32208]	[L1: 3.3580]	55.3+0.1s
[8000/32208]	[L1: 3.3453]	55.3+0.1s
[9600/32208]	[L1: 3.3590]	55.0+0.1s
[11200/32208]	[L1: 3.3693]	55.5+0.1s
[12800/32208]	[L1: 3.3617]	55.5+0.1s
[14400/32208]	[L1: 3.3716]	55.8+0.1s
[16000/32208]	[L1: 3.3607]	55.3+0.1s
[17600/32208]	[L1: 3.3742]	55.2+0.1s
[19200/32208]	[L1: 3.3774]	55.0+0.1s
[20800/32208]	[L1: 3.3710]	55.4+0.1s
[22400/32208]	[L1: 3.3750]	54.7+0.1s
[24000/32208]	[L1: 3.3805]	55.0+0.1s
[25600/32208]	[L1: 3.3878]	54.7+0.1s
[27200/32208]	[L1: 3.3897]	54.6+0.1s
[28800/32208]	[L1: 3.3867]	55.0+0.1s
[30400/32208]	[L1: 3.3872]	55.5+0.1s
[32000/32208]	[L1: 3.3916]	54.7+0.1s

Evaluation:
[ x2]	PSNR: 32.198 (Best: 32.202 @epoch 68)
Forward: 12.15s

Saving...
Total: 13.48s

[Epoch 73]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.3774]	54.2+0.7s
[3200/32208]	[L1: 3.3770]	54.9+0.1s
[4800/32208]	[L1: 3.4069]	54.8+0.1s
[6400/32208]	[L1: 3.3880]	54.3+0.1s
[8000/32208]	[L1: 3.3743]	54.8+0.1s
[9600/32208]	[L1: 3.3938]	54.9+0.1s
[11200/32208]	[L1: 3.3919]	55.4+0.1s
[12800/32208]	[L1: 3.4025]	55.4+0.1s
[14400/32208]	[L1: 3.3952]	54.8+0.1s
[16000/32208]	[L1: 3.3983]	55.0+0.1s
[17600/32208]	[L1: 3.3931]	55.4+0.1s
[19200/32208]	[L1: 3.3972]	55.4+0.1s
[20800/32208]	[L1: 3.3870]	55.2+0.1s
[22400/32208]	[L1: 3.3797]	55.7+0.1s
[24000/32208]	[L1: 3.3839]	55.5+0.1s
[25600/32208]	[L1: 3.3854]	55.4+0.1s
[27200/32208]	[L1: 3.3791]	55.5+0.1s
[28800/32208]	[L1: 3.3781]	56.0+0.1s
[30400/32208]	[L1: 3.3783]	55.8+0.1s
[32000/32208]	[L1: 3.3780]	55.4+0.1s

Evaluation:
[ x2]	PSNR: 32.191 (Best: 32.202 @epoch 68)
Forward: 13.48s

Saving...
Total: 14.67s

[Epoch 74]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.3981]	54.5+0.7s
[3200/32208]	[L1: 3.4259]	54.9+0.1s
[4800/32208]	[L1: 3.4100]	55.5+0.1s
[6400/32208]	[L1: 3.4129]	55.1+0.1s
[8000/32208]	[L1: 3.3957]	55.4+0.1s
[9600/32208]	[L1: 3.3901]	55.4+0.1s
[11200/32208]	[L1: 3.3883]	55.2+0.1s
[12800/32208]	[L1: 3.3929]	55.1+0.1s
[14400/32208]	[L1: 3.4008]	54.7+0.1s
[16000/32208]	[L1: 3.4110]	55.0+0.1s
[17600/32208]	[L1: 3.4062]	55.3+0.1s
[19200/32208]	[L1: 3.4087]	55.2+0.1s
[20800/32208]	[L1: 3.3993]	55.7+0.1s
[22400/32208]	[L1: 3.3965]	55.0+0.1s
[24000/32208]	[L1: 3.3983]	54.9+0.1s
[25600/32208]	[L1: 3.3965]	54.7+0.1s
[27200/32208]	[L1: 3.4019]	55.1+0.1s
[28800/32208]	[L1: 3.4004]	54.9+0.1s
[30400/32208]	[L1: 3.4051]	54.6+0.1s
[32000/32208]	[L1: 3.3998]	54.6+0.1s

Evaluation:
[ x2]	PSNR: 32.183 (Best: 32.202 @epoch 68)
Forward: 13.67s

Saving...
Total: 14.92s

[Epoch 75]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.3943]	54.2+0.7s
[3200/32208]	[L1: 3.4289]	55.3+0.1s
[4800/32208]	[L1: 3.4176]	55.0+0.1s
[6400/32208]	[L1: 3.4340]	55.0+0.1s
[8000/32208]	[L1: 3.4468]	55.3+0.1s
[9600/32208]	[L1: 3.4513]	55.1+0.1s
[11200/32208]	[L1: 3.4464]	55.6+0.1s
[12800/32208]	[L1: 3.4356]	55.2+0.1s
[14400/32208]	[L1: 3.4318]	55.5+0.1s
[16000/32208]	[L1: 3.4342]	55.5+0.1s
[17600/32208]	[L1: 3.4329]	55.2+0.1s
[19200/32208]	[L1: 3.4298]	55.7+0.1s
[20800/32208]	[L1: 3.4255]	55.5+0.1s
[22400/32208]	[L1: 3.4243]	55.5+0.1s
[24000/32208]	[L1: 3.4160]	55.5+0.1s
[25600/32208]	[L1: 3.4221]	55.4+0.1s
[27200/32208]	[L1: 3.4160]	55.5+0.1s
[28800/32208]	[L1: 3.4121]	55.7+0.1s
[30400/32208]	[L1: 3.4048]	55.4+0.1s
[32000/32208]	[L1: 3.4017]	55.5+0.1s

Evaluation:
[ x2]	PSNR: 32.196 (Best: 32.202 @epoch 68)
Forward: 14.05s

Saving...
Total: 15.23s

[Epoch 76]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.3602]	54.8+0.6s
[3200/32208]	[L1: 3.3902]	55.5+0.1s
[4800/32208]	[L1: 3.3653]	55.5+0.1s
[6400/32208]	[L1: 3.3904]	55.0+0.1s
[8000/32208]	[L1: 3.3851]	55.2+0.1s
[9600/32208]	[L1: 3.3678]	55.6+0.1s
[11200/32208]	[L1: 3.3502]	55.4+0.1s
[12800/32208]	[L1: 3.3568]	55.7+0.1s
[14400/32208]	[L1: 3.3577]	55.6+0.1s
[16000/32208]	[L1: 3.3757]	55.0+0.1s
[17600/32208]	[L1: 3.3748]	55.2+0.1s
[19200/32208]	[L1: 3.3680]	55.2+0.1s
[20800/32208]	[L1: 3.3760]	55.3+0.1s
[22400/32208]	[L1: 3.3739]	55.0+0.1s
[24000/32208]	[L1: 3.3810]	55.4+0.1s
[25600/32208]	[L1: 3.3916]	55.2+0.1s
[27200/32208]	[L1: 3.3943]	54.3+0.1s
[28800/32208]	[L1: 3.3923]	54.9+0.1s
[30400/32208]	[L1: 3.3916]	54.8+0.1s
[32000/32208]	[L1: 3.3948]	54.9+0.1s

Evaluation:
[ x2]	PSNR: 32.215 (Best: 32.215 @epoch 76)
Forward: 12.94s

Saving...
Total: 14.34s

[Epoch 77]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.2922]	54.3+0.9s
[3200/32208]	[L1: 3.3583]	54.8+0.1s
[4800/32208]	[L1: 3.3634]	54.6+0.1s
[6400/32208]	[L1: 3.3644]	55.1+0.1s
[8000/32208]	[L1: 3.3522]	55.2+0.1s
[9600/32208]	[L1: 3.3615]	55.4+0.1s
[11200/32208]	[L1: 3.3645]	55.4+0.1s
[12800/32208]	[L1: 3.3742]	55.1+0.1s
[14400/32208]	[L1: 3.3772]	55.0+0.1s
[16000/32208]	[L1: 3.3853]	55.5+0.1s
[17600/32208]	[L1: 3.3832]	55.2+0.1s
[19200/32208]	[L1: 3.3879]	55.6+0.1s
[20800/32208]	[L1: 3.3858]	55.3+0.1s
[22400/32208]	[L1: 3.3980]	55.3+0.1s
[24000/32208]	[L1: 3.3942]	55.2+0.1s
[25600/32208]	[L1: 3.3896]	55.4+0.1s
[27200/32208]	[L1: 3.3934]	55.1+0.1s
[28800/32208]	[L1: 3.3878]	55.3+0.1s
[30400/32208]	[L1: 3.3868]	55.3+0.1s
[32000/32208]	[L1: 3.3850]	55.6+0.1s

Evaluation:
[ x2]	PSNR: 32.199 (Best: 32.215 @epoch 76)
Forward: 14.16s

Saving...
Total: 15.46s

[Epoch 78]	Learning rate: 1.00e-4
[1600/32208]	[L1: 3.3362]	54.9+0.6s
[3200/32208]	[L1: 3.4425]	55.7+0.1s
[4800/32208]	[L1: 3.3835]	55.3+0.1s
[6400/32208]	[L1: 3.4043]	55.1+0.1s
[8000/32208]	[L1: 3.4136]	55.6+0.1s
[9600/32208]	[L1: 3.4207]	55.3+0.1s
[11200/32208]	[L1: 3.4069]	55.3+0.1s
[12800/32208]	[L1: 3.4036]	54.9+0.1s
[14400/32208]	[L1: 3.4021]	54.8+0.1s
[16000/32208]	[L1: 3.4111]	55.4+0.1s
[17600/32208]	[L1: 3.4130]	55.4+0.1s
[19200/32208]	[L1: 3.4101]	55.5+0.1s
[20800/32208]	[L1: 3.4036]	55.0+0.1s
[22400/32208]	[L1: 3.3997]	55.3+0.1s
[24000/32208]	[L1: 3.3994]	55.3+0.1s
[25600/32208]	[L1: 3.3967]	55.1+0.1s
[27200/32208]	[L1: 3.3985]	55.2+0.1s
[28800/32208]	[L1: 3.3988]	55.3+0.1s
[30400/32208]	[L1: 3.3986]	55.5+0.1s
[32000/32208]	[L1: 3.3920]	55.4+0.1s

Evaluation:
[ x2]	PSNR: 32.196 (Best: 32.215 @epoch 76)
Forward: 13.45s

Saving...
Total: 14.77s

